// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google+ API (plus/v1)
// Description:
//   Builds on top of the Google+ platform.
// Documentation:
//   https://developers.google.com/+/api/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRPlus_Acl;
@class GTLRPlus_AclentryResource;
@class GTLRPlus_Activity;
@class GTLRPlus_ActivityActor;
@class GTLRPlus_ActivityActorClientSpecificActorInfo;
@class GTLRPlus_ActivityActorClientSpecificActorInfoYoutubeActorInfo;
@class GTLRPlus_ActivityActorImage;
@class GTLRPlus_ActivityActorName;
@class GTLRPlus_ActivityActorVerification;
@class GTLRPlus_ActivityObject;
@class GTLRPlus_ActivityObjectActor;
@class GTLRPlus_ActivityObjectActorClientSpecificActorInfo;
@class GTLRPlus_ActivityObjectActorClientSpecificActorInfoYoutubeActorInfo;
@class GTLRPlus_ActivityObjectActorImage;
@class GTLRPlus_ActivityObjectActorVerification;
@class GTLRPlus_ActivityObjectAttachmentsItem;
@class GTLRPlus_ActivityObjectAttachmentsItemEmbed;
@class GTLRPlus_ActivityObjectAttachmentsItemFullImage;
@class GTLRPlus_ActivityObjectAttachmentsItemImage;
@class GTLRPlus_ActivityObjectAttachmentsItemThumbnailsItem;
@class GTLRPlus_ActivityObjectAttachmentsItemThumbnailsItemImage;
@class GTLRPlus_ActivityObjectPlusoners;
@class GTLRPlus_ActivityObjectReplies;
@class GTLRPlus_ActivityObjectResharers;
@class GTLRPlus_ActivityProvider;
@class GTLRPlus_Comment;
@class GTLRPlus_CommentActor;
@class GTLRPlus_CommentActorClientSpecificActorInfo;
@class GTLRPlus_CommentActorClientSpecificActorInfoYoutubeActorInfo;
@class GTLRPlus_CommentActorImage;
@class GTLRPlus_CommentActorVerification;
@class GTLRPlus_CommentInReplyToItem;
@class GTLRPlus_CommentObject;
@class GTLRPlus_CommentPlusoners;
@class GTLRPlus_Person;
@class GTLRPlus_PersonAgeRange;
@class GTLRPlus_PersonCover;
@class GTLRPlus_PersonCoverCoverInfo;
@class GTLRPlus_PersonCoverCoverPhoto;
@class GTLRPlus_PersonEmailsItem;
@class GTLRPlus_PersonImage;
@class GTLRPlus_PersonName;
@class GTLRPlus_PersonOrganizationsItem;
@class GTLRPlus_PersonPlacesLivedItem;
@class GTLRPlus_PersonUrlsItem;
@class GTLRPlus_Place;
@class GTLRPlus_PlaceAddress;
@class GTLRPlus_PlacePosition;

NS_ASSUME_NONNULL_BEGIN

/**
 *  GTLRPlus_Acl
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRPlus_Acl : GTLRCollectionObject

/**
 *  Description of the access granted, suitable for display.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The list of access entries.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_AclentryResource *> *items;

/**
 *  Identifies this resource as a collection of access controls. Value:
 *  "plus#acl".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRPlus_AclentryResource
 */
@interface GTLRPlus_AclentryResource : GTLRObject

/** A descriptive name for this entry. Suitable for display. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The ID of the entry. For entries of type "person" or "circle", this is the
 *  ID of the resource. For other types, this property is not set.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The type of entry describing to whom access is granted. Possible values are:
 *  - "person" - Access to an individual.
 *  - "circle" - Access to members of a circle.
 *  - "myCircles" - Access to members of all the person's circles.
 *  - "extendedCircles" - Access to members of all the person's circles, plus
 *  all of the people in their circles.
 *  - "domain" - Access to members of the person's Google Apps domain.
 *  - "public" - Access to anyone on the web.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRPlus_Activity
 */
@interface GTLRPlus_Activity : GTLRObject

/** Identifies who has access to see this activity. */
@property(nonatomic, strong, nullable) GTLRPlus_Acl *access;

/** The person who performed this activity. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityActor *actor;

/** Street address where this activity occurred. */
@property(nonatomic, copy, nullable) NSString *address;

/**
 *  Additional content added by the person who shared this activity, applicable
 *  only when resharing an activity.
 */
@property(nonatomic, copy, nullable) NSString *annotation;

/**
 *  If this activity is a crosspost from another system, this property specifies
 *  the ID of the original activity.
 */
@property(nonatomic, copy, nullable) NSString *crosspostSource;

/** ETag of this response for caching purposes. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Latitude and longitude where this activity occurred. Format is latitude
 *  followed by longitude, space separated.
 */
@property(nonatomic, copy, nullable) NSString *geocode;

/**
 *  The ID of this activity.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Identifies this resource as an activity. Value: "plus#activity". */
@property(nonatomic, copy, nullable) NSString *kind;

/** The location where this activity occurred. */
@property(nonatomic, strong, nullable) GTLRPlus_Place *location;

/** The object of this activity. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObject *object;

/** ID of the place where this activity occurred. */
@property(nonatomic, copy, nullable) NSString *placeId;

/** Name of the place where this activity occurred. */
@property(nonatomic, copy, nullable) NSString *placeName;

/** The service provider that initially published this activity. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityProvider *provider;

/**
 *  The time at which this activity was initially published. Formatted as an RFC
 *  3339 timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *published;

/**
 *  Radius, in meters, of the region where this activity occurred, centered at
 *  the latitude and longitude identified in geocode.
 */
@property(nonatomic, copy, nullable) NSString *radius;

/** Title of this activity. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  The time at which this activity was last updated. Formatted as an RFC 3339
 *  timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

/** The link to this activity. */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  This activity's verb, which indicates the action that was performed.
 *  Possible values include, but are not limited to, the following values:
 *  - "post" - Publish content to the stream.
 *  - "share" - Reshare an activity.
 */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  The person who performed this activity.
 */
@interface GTLRPlus_ActivityActor : GTLRObject

/** Actor info specific to particular clients. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityActorClientSpecificActorInfo *clientSpecificActorInfo;

/** The name of the actor, suitable for display. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The ID of the actor's Person resource.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The image representation of the actor. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityActorImage *image;

/** An object representation of the individual components of name. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityActorName *name;

/** The link to the actor's Google profile. */
@property(nonatomic, copy, nullable) NSString *url;

/** Verification status of actor. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityActorVerification *verification;

@end


/**
 *  The object of this activity.
 */
@interface GTLRPlus_ActivityObject : GTLRObject

/**
 *  If this activity's object is itself another activity, such as when a person
 *  reshares an activity, this property specifies the original activity's actor.
 */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectActor *actor;

/** The media objects attached to this activity. */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_ActivityObjectAttachmentsItem *> *attachments;

/** The HTML-formatted content, which is suitable for display. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The ID of the object. When resharing an activity, this is the ID of the
 *  activity that is being reshared.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The type of the object. Possible values include, but are not limited to, the
 *  following values:
 *  - "note" - Textual content.
 *  - "activity" - A Google+ activity.
 */
@property(nonatomic, copy, nullable) NSString *objectType;

/**
 *  The content (text) as provided by the author, which is stored without any
 *  HTML formatting. When creating or updating an activity, this value must be
 *  supplied as plain text in the request.
 */
@property(nonatomic, copy, nullable) NSString *originalContent;

/** People who +1'd this activity. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectPlusoners *plusoners;

/** Comments in reply to this activity. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectReplies *replies;

/** People who reshared this activity. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectResharers *resharers;

/** The URL that points to the linked resource. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  The service provider that initially published this activity.
 */
@interface GTLRPlus_ActivityProvider : GTLRObject

/** Name of the service provider. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Actor info specific to particular clients.
 */
@interface GTLRPlus_ActivityActorClientSpecificActorInfo : GTLRObject

/** Actor info specific to YouTube clients. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityActorClientSpecificActorInfoYoutubeActorInfo *youtubeActorInfo;

@end


/**
 *  The image representation of the actor.
 */
@interface GTLRPlus_ActivityActorImage : GTLRObject

/**
 *  The URL of the actor's profile photo. To resize the image and crop it to a
 *  square, append the query string ?sz=x, where x is the dimension in pixels of
 *  each side.
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  An object representation of the individual components of name.
 */
@interface GTLRPlus_ActivityActorName : GTLRObject

/** The family name ("last name") of the actor. */
@property(nonatomic, copy, nullable) NSString *familyName;

/** The given name ("first name") of the actor. */
@property(nonatomic, copy, nullable) NSString *givenName;

@end


/**
 *  Verification status of actor.
 */
@interface GTLRPlus_ActivityActorVerification : GTLRObject

/** Verification for one-time or manual processes. */
@property(nonatomic, copy, nullable) NSString *adHocVerified;

@end


/**
 *  If this activity's object is itself another activity, such as when a person
 *  reshares an activity, this property specifies the original activity's actor.
 */
@interface GTLRPlus_ActivityObjectActor : GTLRObject

/** Actor info specific to particular clients. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectActorClientSpecificActorInfo *clientSpecificActorInfo;

/** The original actor's name, which is suitable for display. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  ID of the original actor.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The image representation of the original actor. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectActorImage *image;

/** A link to the original actor's Google profile. */
@property(nonatomic, copy, nullable) NSString *url;

/** Verification status of actor. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectActorVerification *verification;

@end


/**
 *  GTLRPlus_ActivityObjectAttachmentsItem
 */
@interface GTLRPlus_ActivityObjectAttachmentsItem : GTLRObject

/**
 *  If the attachment is an article, this property contains a snippet of text
 *  from the article. It can also include descriptions for other types.
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The title of the attachment, such as a photo caption or an article title.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** If the attachment is a video, the embeddable link. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectAttachmentsItemEmbed *embed;

/** The full image URL for photo attachments. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectAttachmentsItemFullImage *fullImage;

/**
 *  The ID of the attachment.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The preview image for photos or videos. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectAttachmentsItemImage *image;

/**
 *  The type of media object. Possible values include, but are not limited to,
 *  the following values:
 *  - "photo" - A photo.
 *  - "album" - A photo album.
 *  - "video" - A video.
 *  - "article" - An article, specified by a link.
 */
@property(nonatomic, copy, nullable) NSString *objectType;

/**
 *  If the attachment is an album, this property is a list of potential
 *  additional thumbnails from the album.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_ActivityObjectAttachmentsItemThumbnailsItem *> *thumbnails;

/** The link to the attachment, which should be of type text/html. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  People who +1'd this activity.
 */
@interface GTLRPlus_ActivityObjectPlusoners : GTLRObject

/** The URL for the collection of people who +1'd this activity. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Total number of people who +1'd this activity.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  Comments in reply to this activity.
 */
@interface GTLRPlus_ActivityObjectReplies : GTLRObject

/** The URL for the collection of comments in reply to this activity. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Total number of comments on this activity.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  People who reshared this activity.
 */
@interface GTLRPlus_ActivityObjectResharers : GTLRObject

/** The URL for the collection of resharers. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Total number of people who reshared this activity.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  Actor info specific to YouTube clients.
 */
@interface GTLRPlus_ActivityActorClientSpecificActorInfoYoutubeActorInfo : GTLRObject

/** ID of the YouTube channel owned by the Actor. */
@property(nonatomic, copy, nullable) NSString *channelId;

@end


/**
 *  Actor info specific to particular clients.
 */
@interface GTLRPlus_ActivityObjectActorClientSpecificActorInfo : GTLRObject

/** Actor info specific to YouTube clients. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectActorClientSpecificActorInfoYoutubeActorInfo *youtubeActorInfo;

@end


/**
 *  The image representation of the original actor.
 */
@interface GTLRPlus_ActivityObjectActorImage : GTLRObject

/** A URL that points to a thumbnail photo of the original actor. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Verification status of actor.
 */
@interface GTLRPlus_ActivityObjectActorVerification : GTLRObject

/** Verification for one-time or manual processes. */
@property(nonatomic, copy, nullable) NSString *adHocVerified;

@end


/**
 *  If the attachment is a video, the embeddable link.
 */
@interface GTLRPlus_ActivityObjectAttachmentsItemEmbed : GTLRObject

/** Media type of the link. */
@property(nonatomic, copy, nullable) NSString *type;

/** URL of the link. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  The full image URL for photo attachments.
 */
@interface GTLRPlus_ActivityObjectAttachmentsItemFullImage : GTLRObject

/**
 *  The height, in pixels, of the linked resource.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** Media type of the link. */
@property(nonatomic, copy, nullable) NSString *type;

/** URL of the image. */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  The width, in pixels, of the linked resource.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  The preview image for photos or videos.
 */
@interface GTLRPlus_ActivityObjectAttachmentsItemImage : GTLRObject

/**
 *  The height, in pixels, of the linked resource.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** Media type of the link. */
@property(nonatomic, copy, nullable) NSString *type;

/** Image URL. */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  The width, in pixels, of the linked resource.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  GTLRPlus_ActivityObjectAttachmentsItemThumbnailsItem
 */
@interface GTLRPlus_ActivityObjectAttachmentsItemThumbnailsItem : GTLRObject

/**
 *  Potential name of the thumbnail.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Image resource. */
@property(nonatomic, strong, nullable) GTLRPlus_ActivityObjectAttachmentsItemThumbnailsItemImage *image;

/** URL of the webpage containing the image. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Actor info specific to YouTube clients.
 */
@interface GTLRPlus_ActivityObjectActorClientSpecificActorInfoYoutubeActorInfo : GTLRObject

/** ID of the YouTube channel owned by the Actor. */
@property(nonatomic, copy, nullable) NSString *channelId;

@end


/**
 *  Image resource.
 */
@interface GTLRPlus_ActivityObjectAttachmentsItemThumbnailsItemImage : GTLRObject

/**
 *  The height, in pixels, of the linked resource.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** Media type of the link. */
@property(nonatomic, copy, nullable) NSString *type;

/** Image url. */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  The width, in pixels, of the linked resource.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  GTLRPlus_ActivityFeed
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRPlus_ActivityFeed : GTLRCollectionObject

/** ETag of this response for caching purposes. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The ID of this collection of activities. Deprecated.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The activities in this page of results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_Activity *> *items;

/**
 *  Identifies this resource as a collection of activities. Value:
 *  "plus#activityFeed".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Link to the next page of activities. */
@property(nonatomic, copy, nullable) NSString *nextLink;

/**
 *  The continuation token, which is used to page through large result sets.
 *  Provide this value in a subsequent request to return the next page of
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Link to this activity resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The title of this collection of activities, which is a truncated portion of
 *  the content.
 */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  The time at which this collection of activities was last updated. Formatted
 *  as an RFC 3339 timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

@end


/**
 *  GTLRPlus_Comment
 */
@interface GTLRPlus_Comment : GTLRObject

/** The person who posted this comment. */
@property(nonatomic, strong, nullable) GTLRPlus_CommentActor *actor;

/** ETag of this response for caching purposes. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The ID of this comment.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The activity this comment replied to. */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_CommentInReplyToItem *> *inReplyTo;

/** Identifies this resource as a comment. Value: "plus#comment". */
@property(nonatomic, copy, nullable) NSString *kind;

/** The object of this comment. */
@property(nonatomic, strong, nullable) GTLRPlus_CommentObject *object;

/** People who +1'd this comment. */
@property(nonatomic, strong, nullable) GTLRPlus_CommentPlusoners *plusoners;

/**
 *  The time at which this comment was initially published. Formatted as an RFC
 *  3339 timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *published;

/** Link to this comment resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The time at which this comment was last updated. Formatted as an RFC 3339
 *  timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

/**
 *  This comment's verb, indicating what action was performed. Possible values
 *  are:
 *  - "post" - Publish content to the stream.
 */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  The person who posted this comment.
 */
@interface GTLRPlus_CommentActor : GTLRObject

/** Actor info specific to particular clients. */
@property(nonatomic, strong, nullable) GTLRPlus_CommentActorClientSpecificActorInfo *clientSpecificActorInfo;

/** The name of this actor, suitable for display. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The ID of the actor.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The image representation of this actor. */
@property(nonatomic, strong, nullable) GTLRPlus_CommentActorImage *image;

/** A link to the Person resource for this actor. */
@property(nonatomic, copy, nullable) NSString *url;

/** Verification status of actor. */
@property(nonatomic, strong, nullable) GTLRPlus_CommentActorVerification *verification;

@end


/**
 *  GTLRPlus_CommentInReplyToItem
 */
@interface GTLRPlus_CommentInReplyToItem : GTLRObject

/**
 *  The ID of the activity.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The URL of the activity. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  The object of this comment.
 */
@interface GTLRPlus_CommentObject : GTLRObject

/** The HTML-formatted content, suitable for display. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The object type of this comment. Possible values are:
 *  - "comment" - A comment in reply to an activity.
 */
@property(nonatomic, copy, nullable) NSString *objectType;

/**
 *  The content (text) as provided by the author, stored without any HTML
 *  formatting. When creating or updating a comment, this value must be supplied
 *  as plain text in the request.
 */
@property(nonatomic, copy, nullable) NSString *originalContent;

@end


/**
 *  People who +1'd this comment.
 */
@interface GTLRPlus_CommentPlusoners : GTLRObject

/**
 *  Total number of people who +1'd this comment.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  Actor info specific to particular clients.
 */
@interface GTLRPlus_CommentActorClientSpecificActorInfo : GTLRObject

/** Actor info specific to YouTube clients. */
@property(nonatomic, strong, nullable) GTLRPlus_CommentActorClientSpecificActorInfoYoutubeActorInfo *youtubeActorInfo;

@end


/**
 *  The image representation of this actor.
 */
@interface GTLRPlus_CommentActorImage : GTLRObject

/**
 *  The URL of the actor's profile photo. To resize the image and crop it to a
 *  square, append the query string ?sz=x, where x is the dimension in pixels of
 *  each side.
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Verification status of actor.
 */
@interface GTLRPlus_CommentActorVerification : GTLRObject

/** Verification for one-time or manual processes. */
@property(nonatomic, copy, nullable) NSString *adHocVerified;

@end


/**
 *  Actor info specific to YouTube clients.
 */
@interface GTLRPlus_CommentActorClientSpecificActorInfoYoutubeActorInfo : GTLRObject

/** ID of the YouTube channel owned by the Actor. */
@property(nonatomic, copy, nullable) NSString *channelId;

@end


/**
 *  GTLRPlus_CommentFeed
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRPlus_CommentFeed : GTLRCollectionObject

/** ETag of this response for caching purposes. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The ID of this collection of comments.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The comments in this page of results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_Comment *> *items;

/**
 *  Identifies this resource as a collection of comments. Value:
 *  "plus#commentFeed".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Link to the next page of activities. */
@property(nonatomic, copy, nullable) NSString *nextLink;

/**
 *  The continuation token, which is used to page through large result sets.
 *  Provide this value in a subsequent request to return the next page of
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** The title of this collection of comments. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  The time at which this collection of comments was last updated. Formatted as
 *  an RFC 3339 timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updated;

@end


/**
 *  GTLRPlus_PeopleFeed
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRPlus_PeopleFeed : GTLRCollectionObject

/** ETag of this response for caching purposes. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The people in this page of results. Each item includes the id, displayName,
 *  image, and url for the person. To retrieve additional profile data, see the
 *  people.get method.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_Person *> *items;

/**
 *  Identifies this resource as a collection of people. Value:
 *  "plus#peopleFeed".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The continuation token, which is used to page through large result sets.
 *  Provide this value in a subsequent request to return the next page of
 *  results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Link to this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** The title of this collection of people. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  The total number of people available in this list. The number of people in a
 *  response might be smaller due to paging. This might not be set for all
 *  collections.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalItems;

@end


/**
 *  GTLRPlus_Person
 */
@interface GTLRPlus_Person : GTLRObject

/** A short biography for this person. */
@property(nonatomic, copy, nullable) NSString *aboutMe;

/**
 *  The age range of the person. Valid ranges are 17 or younger, 18 to 20, and
 *  21 or older. Age is determined from the user's birthday using Western age
 *  reckoning.
 */
@property(nonatomic, strong, nullable) GTLRPlus_PersonAgeRange *ageRange;

/** The person's date of birth, represented as YYYY-MM-DD. */
@property(nonatomic, copy, nullable) NSString *birthday;

/** The "bragging rights" line of this person. */
@property(nonatomic, copy, nullable) NSString *braggingRights;

/**
 *  For followers who are visible, the number of people who have added this
 *  person or page to a circle.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *circledByCount;

/** The cover photo content. */
@property(nonatomic, strong, nullable) GTLRPlus_PersonCover *cover;

/** (this field is not currently used) */
@property(nonatomic, copy, nullable) NSString *currentLocation;

/** The name of this person, which is suitable for display. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The hosted domain name for the user's Google Apps account. For instance,
 *  example.com. The plus.profile.emails.read or email scope is needed to get
 *  this domain name.
 */
@property(nonatomic, copy, nullable) NSString *domain;

/**
 *  A list of email addresses that this person has, including their Google
 *  account email address, and the public verified email addresses on their
 *  Google+ profile. The plus.profile.emails.read scope is needed to retrieve
 *  these email addresses, or the email scope can be used to retrieve just the
 *  Google account email address.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_PersonEmailsItem *> *emails;

/** ETag of this response for caching purposes. */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The person's gender. Possible values include, but are not limited to, the
 *  following values:
 *  - "male" - Male gender.
 *  - "female" - Female gender.
 *  - "other" - Other.
 */
@property(nonatomic, copy, nullable) NSString *gender;

/**
 *  The ID of this person.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The representation of the person's profile photo. */
@property(nonatomic, strong, nullable) GTLRPlus_PersonImage *image;

/**
 *  Whether this user has signed up for Google+.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPlusUser;

/** Identifies this resource as a person. Value: "plus#person". */
@property(nonatomic, copy, nullable) NSString *kind;

/** The user's preferred language for rendering. */
@property(nonatomic, copy, nullable) NSString *language;

/**
 *  An object representation of the individual components of a person's name.
 */
@property(nonatomic, strong, nullable) GTLRPlus_PersonName *name;

/** The nickname of this person. */
@property(nonatomic, copy, nullable) NSString *nickname;

/**
 *  Type of person within Google+. Possible values include, but are not limited
 *  to, the following values:
 *  - "person" - represents an actual person.
 *  - "page" - represents a page.
 */
@property(nonatomic, copy, nullable) NSString *objectType;

/** The occupation of this person. */
@property(nonatomic, copy, nullable) NSString *occupation;

/**
 *  A list of current or past organizations with which this person is
 *  associated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_PersonOrganizationsItem *> *organizations;

/** A list of places where this person has lived. */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_PersonPlacesLivedItem *> *placesLived;

/**
 *  If a Google+ Page, the number of people who have +1'd this page.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *plusOneCount;

/**
 *  The person's relationship status. Possible values include, but are not
 *  limited to, the following values:
 *  - "single" - Person is single.
 *  - "in_a_relationship" - Person is in a relationship.
 *  - "engaged" - Person is engaged.
 *  - "married" - Person is married.
 *  - "its_complicated" - The relationship is complicated.
 *  - "open_relationship" - Person is in an open relationship.
 *  - "widowed" - Person is widowed.
 *  - "in_domestic_partnership" - Person is in a domestic partnership.
 *  - "in_civil_union" - Person is in a civil union.
 */
@property(nonatomic, copy, nullable) NSString *relationshipStatus;

/** The person's skills. */
@property(nonatomic, copy, nullable) NSString *skills;

/** The brief description (tagline) of this person. */
@property(nonatomic, copy, nullable) NSString *tagline;

/** The URL of this person's profile. */
@property(nonatomic, copy, nullable) NSString *url;

/** A list of URLs for this person. */
@property(nonatomic, strong, nullable) NSArray<GTLRPlus_PersonUrlsItem *> *urls;

/**
 *  Whether the person or Google+ Page has been verified.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *verified;

@end


/**
 *  The age range of the person. Valid ranges are 17 or younger, 18 to 20, and
 *  21 or older. Age is determined from the user's birthday using Western age
 *  reckoning.
 */
@interface GTLRPlus_PersonAgeRange : GTLRObject

/**
 *  The age range's upper bound, if any. Possible values include, but are not
 *  limited to, the following:
 *  - "17" - for age 17
 *  - "20" - for age 20
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *max;

/**
 *  The age range's lower bound, if any. Possible values include, but are not
 *  limited to, the following:
 *  - "21" - for age 21
 *  - "18" - for age 18
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *min;

@end


/**
 *  The cover photo content.
 */
@interface GTLRPlus_PersonCover : GTLRObject

/** Extra information about the cover photo. */
@property(nonatomic, strong, nullable) GTLRPlus_PersonCoverCoverInfo *coverInfo;

/** The person's primary cover image. */
@property(nonatomic, strong, nullable) GTLRPlus_PersonCoverCoverPhoto *coverPhoto;

/**
 *  The layout of the cover art. Possible values include, but are not limited
 *  to, the following values:
 *  - "banner" - One large image banner.
 */
@property(nonatomic, copy, nullable) NSString *layout;

@end


/**
 *  GTLRPlus_PersonEmailsItem
 */
@interface GTLRPlus_PersonEmailsItem : GTLRObject

/**
 *  The type of address. Possible values include, but are not limited to, the
 *  following values:
 *  - "account" - Google account email address.
 *  - "home" - Home email address.
 *  - "work" - Work email address.
 *  - "other" - Other.
 */
@property(nonatomic, copy, nullable) NSString *type;

/** The email address. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  The representation of the person's profile photo.
 */
@interface GTLRPlus_PersonImage : GTLRObject

/**
 *  Whether the person's profile photo is the default one
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isDefault;

/**
 *  The URL of the person's profile photo. To resize the image and crop it to a
 *  square, append the query string ?sz=x, where x is the dimension in pixels of
 *  each side.
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  An object representation of the individual components of a person's name.
 */
@interface GTLRPlus_PersonName : GTLRObject

/** The family name (last name) of this person. */
@property(nonatomic, copy, nullable) NSString *familyName;

/** The full name of this person, including middle names, suffixes, etc. */
@property(nonatomic, copy, nullable) NSString *formatted;

/** The given name (first name) of this person. */
@property(nonatomic, copy, nullable) NSString *givenName;

/** The honorific prefixes (such as "Dr." or "Mrs.") for this person. */
@property(nonatomic, copy, nullable) NSString *honorificPrefix;

/** The honorific suffixes (such as "Jr.") for this person. */
@property(nonatomic, copy, nullable) NSString *honorificSuffix;

/** The middle name of this person. */
@property(nonatomic, copy, nullable) NSString *middleName;

@end


/**
 *  GTLRPlus_PersonOrganizationsItem
 */
@interface GTLRPlus_PersonOrganizationsItem : GTLRObject

/** The department within the organization. Deprecated. */
@property(nonatomic, copy, nullable) NSString *department;

/**
 *  A short description of the person's role in this organization. Deprecated.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The date that the person left this organization. */
@property(nonatomic, copy, nullable) NSString *endDate;

/** The location of this organization. Deprecated. */
@property(nonatomic, copy, nullable) NSString *location;

/** The name of the organization. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  If "true", indicates this organization is the person's primary one, which is
 *  typically interpreted as the current one.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primary;

/** The date that the person joined this organization. */
@property(nonatomic, copy, nullable) NSString *startDate;

/** The person's job title or role within the organization. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  The type of organization. Possible values include, but are not limited to,
 *  the following values:
 *  - "work" - Work.
 *  - "school" - School.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRPlus_PersonPlacesLivedItem
 */
@interface GTLRPlus_PersonPlacesLivedItem : GTLRObject

/**
 *  If "true", this place of residence is this person's primary residence.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *primary;

/**
 *  A place where this person has lived. For example: "Seattle, WA", "Near
 *  Toronto".
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRPlus_PersonUrlsItem
 */
@interface GTLRPlus_PersonUrlsItem : GTLRObject

/** The label of the URL. */
@property(nonatomic, copy, nullable) NSString *label;

/**
 *  The type of URL. Possible values include, but are not limited to, the
 *  following values:
 *  - "otherProfile" - URL for another profile.
 *  - "contributor" - URL to a site for which this person is a contributor.
 *  - "website" - URL for this Google+ Page's primary website.
 *  - "other" - Other URL.
 */
@property(nonatomic, copy, nullable) NSString *type;

/** The URL value. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Extra information about the cover photo.
 */
@interface GTLRPlus_PersonCoverCoverInfo : GTLRObject

/**
 *  The difference between the left position of the cover image and the actual
 *  displayed cover image. Only valid for banner layout.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *leftImageOffset;

/**
 *  The difference between the top position of the cover image and the actual
 *  displayed cover image. Only valid for banner layout.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *topImageOffset;

@end


/**
 *  The person's primary cover image.
 */
@interface GTLRPlus_PersonCoverCoverPhoto : GTLRObject

/**
 *  The height of the image.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** The URL of the image. */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  The width of the image.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  GTLRPlus_Place
 */
@interface GTLRPlus_Place : GTLRObject

/** The physical address of the place. */
@property(nonatomic, strong, nullable) GTLRPlus_PlaceAddress *address;

/** The display name of the place. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The id of the place.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Identifies this resource as a place. Value: "plus#place". */
@property(nonatomic, copy, nullable) NSString *kind;

/** The position of the place. */
@property(nonatomic, strong, nullable) GTLRPlus_PlacePosition *position;

@end


/**
 *  The physical address of the place.
 */
@interface GTLRPlus_PlaceAddress : GTLRObject

/** The formatted address for display. */
@property(nonatomic, copy, nullable) NSString *formatted;

@end


/**
 *  The position of the place.
 */
@interface GTLRPlus_PlacePosition : GTLRObject

/**
 *  The latitude of this position.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  The longitude of this position.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

@end

NS_ASSUME_NONNULL_END
