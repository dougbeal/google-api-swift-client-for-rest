// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   QPX Express API (qpxExpress/v1)
// Description:
//   Finds the least expensive flights between an origin and a destination.
// Documentation:
//   http://developers.google.com/qpx-express

#import "GTLRQPXExpressObjects.h"

// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_AircraftData
//

@implementation GTLRQPXExpress_AircraftData
@dynamic code, kind, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_AirportData
//

@implementation GTLRQPXExpress_AirportData
@dynamic city, code, kind, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_BagDescriptor
//

@implementation GTLRQPXExpress_BagDescriptor
@dynamic commercialName, count, descriptionProperty, kind, subcode;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"description" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_CarrierData
//

@implementation GTLRQPXExpress_CarrierData
@dynamic code, kind, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_CityData
//

@implementation GTLRQPXExpress_CityData
@dynamic code, country, kind, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_Data
//

@implementation GTLRQPXExpress_Data
@dynamic aircraft, airport, carrier, city, kind, tax;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"aircraft" : [GTLRQPXExpress_AircraftData class],
    @"airport" : [GTLRQPXExpress_AirportData class],
    @"carrier" : [GTLRQPXExpress_CarrierData class],
    @"city" : [GTLRQPXExpress_CityData class],
    @"tax" : [GTLRQPXExpress_TaxData class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_FareInfo
//

@implementation GTLRQPXExpress_FareInfo
@dynamic basisCode, carrier, destination, identifier, kind, origin,
         privateProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"identifier" : @"id",
    @"privateProperty" : @"private"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_FlightInfo
//

@implementation GTLRQPXExpress_FlightInfo
@dynamic carrier, number;
@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_FreeBaggageAllowance
//

@implementation GTLRQPXExpress_FreeBaggageAllowance
@dynamic bagDescriptor, kilos, kilosPerPiece, kind, pieces, pounds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bagDescriptor" : [GTLRQPXExpress_BagDescriptor class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_LegInfo
//

@implementation GTLRQPXExpress_LegInfo
@dynamic aircraft, arrivalTime, changePlane, connectionDuration, departureTime,
         destination, destinationTerminal, duration, identifier, kind, meal,
         mileage, onTimePerformance, operatingDisclosure, origin,
         originTerminal, secure;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_PassengerCounts
//

@implementation GTLRQPXExpress_PassengerCounts
@dynamic adultCount, childCount, infantInLapCount, infantInSeatCount, kind,
         seniorCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_PricingInfo
//

@implementation GTLRQPXExpress_PricingInfo
@dynamic baseFareTotal, fare, fareCalculation, kind, latestTicketingTime,
         passengers, ptc, refundable, saleFareTotal, saleTaxTotal, saleTotal,
         segmentPricing, tax;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fare" : [GTLRQPXExpress_FareInfo class],
    @"segmentPricing" : [GTLRQPXExpress_SegmentPricing class],
    @"tax" : [GTLRQPXExpress_TaxInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_SegmentInfo
//

@implementation GTLRQPXExpress_SegmentInfo
@dynamic bookingCode, bookingCodeCount, cabin, connectionDuration, duration,
         flight, identifier, kind, leg, marriedSegmentGroup,
         subjectToGovernmentApproval;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"leg" : [GTLRQPXExpress_LegInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_SegmentPricing
//

@implementation GTLRQPXExpress_SegmentPricing
@dynamic fareId, freeBaggageOption, kind, segmentId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"freeBaggageOption" : [GTLRQPXExpress_FreeBaggageAllowance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_SliceInfo
//

@implementation GTLRQPXExpress_SliceInfo
@dynamic duration, kind, segment;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"segment" : [GTLRQPXExpress_SegmentInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_SliceInput
//

@implementation GTLRQPXExpress_SliceInput
@dynamic alliance, date, destination, kind, maxConnectionDuration, maxStops,
         origin, permittedCarrier, permittedDepartureTime, preferredCabin,
         prohibitedCarrier;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permittedCarrier" : [NSString class],
    @"prohibitedCarrier" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_TaxData
//

@implementation GTLRQPXExpress_TaxData
@dynamic identifier, kind, name;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_TaxInfo
//

@implementation GTLRQPXExpress_TaxInfo
@dynamic chargeType, code, country, identifier, kind, salePrice;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_TimeOfDayRange
//

@implementation GTLRQPXExpress_TimeOfDayRange
@dynamic earliestTime, kind, latestTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_TripOption
//

@implementation GTLRQPXExpress_TripOption
@dynamic identifier, kind, pricing, saleTotal, slice;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pricing" : [GTLRQPXExpress_PricingInfo class],
    @"slice" : [GTLRQPXExpress_SliceInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_TripOptionsRequest
//

@implementation GTLRQPXExpress_TripOptionsRequest
@dynamic maxPrice, passengers, refundable, saleCountry, slice, solutions,
         ticketingCountry;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"slice" : [GTLRQPXExpress_SliceInput class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_TripOptionsResponse
//

@implementation GTLRQPXExpress_TripOptionsResponse
@dynamic data, kind, requestId, tripOption;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tripOption" : [GTLRQPXExpress_TripOption class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_TripsSearchRequest
//

@implementation GTLRQPXExpress_TripsSearchRequest
@dynamic request;
@end


// ----------------------------------------------------------------------------
//
//   GTLRQPXExpress_TripsSearchResponse
//

@implementation GTLRQPXExpress_TripsSearchResponse
@dynamic kind, trips;
@end
