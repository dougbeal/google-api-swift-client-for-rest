// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Tag Manager API (tagmanager/v1)
// Description:
//   Accesses Tag Manager accounts and containers.
// Documentation:
//   https://developers.google.com/tag-manager/api/v1/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRTagManager_Account;
@class GTLRTagManager_Container;
@class GTLRTagManager_ContainerVersion;
@class GTLRTagManager_CreateContainerVersionRequestVersionOptions;
@class GTLRTagManager_Environment;
@class GTLRTagManager_Folder;
@class GTLRTagManager_Tag;
@class GTLRTagManager_Trigger;
@class GTLRTagManager_UserAccess;
@class GTLRTagManager_Variable;

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Tag Manager query classes.
 */
@interface GTLRTagManagerQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a Container.
 *
 *  Method: tagmanager.accounts.containers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersCreate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersCreateWithObject:accountId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/**
 *  Fetches a @c GTLRTagManager_Container.
 *
 *  Creates a Container.
 *
 *  @param object The @c GTLRTagManager_Container to include in the query.
 *  @param accountId The GTM Account ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersCreate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Container *)object
                      accountId:(NSString *)accountId;

@end

/**
 *  Deletes a Container.
 *
 *  Method: tagmanager.accounts.containers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerDeleteContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersDelete : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersDeleteWithaccountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a Container.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersDelete
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId;

@end

/**
 *  Creates a GTM Environment.
 *
 *  Method: tagmanager.accounts.containers.environments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersEnvironmentsCreate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersEnvironmentsCreateWithObject:accountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_Environment.
 *
 *  Creates a GTM Environment.
 *
 *  @param object The @c GTLRTagManager_Environment to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersEnvironmentsCreate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Environment *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId;

@end

/**
 *  Deletes a GTM Environment.
 *
 *  Method: tagmanager.accounts.containers.environments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersEnvironmentsDelete : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersEnvironmentsDeleteWithaccountId:containerId:environmentId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Environment ID. */
@property(nonatomic, copy, nullable) NSString *environmentId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a GTM Environment.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param environmentId The GTM Environment ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersEnvironmentsDelete
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                     environmentId:(NSString *)environmentId;

@end

/**
 *  Gets a GTM Environment.
 *
 *  Method: tagmanager.accounts.containers.environments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersEnvironmentsGet : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersEnvironmentsGetWithaccountId:containerId:environmentId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Environment ID. */
@property(nonatomic, copy, nullable) NSString *environmentId;

/**
 *  Fetches a @c GTLRTagManager_Environment.
 *
 *  Gets a GTM Environment.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param environmentId The GTM Environment ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersEnvironmentsGet
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                     environmentId:(NSString *)environmentId;

@end

/**
 *  Lists all GTM Environments of a GTM Container.
 *
 *  Method: tagmanager.accounts.containers.environments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersEnvironmentsList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersEnvironmentsListWithaccountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_ListEnvironmentsResponse.
 *
 *  Lists all GTM Environments of a GTM Container.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersEnvironmentsList
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId;

@end

/**
 *  Updates a GTM Environment. This method supports patch semantics.
 *
 *  Method: tagmanager.accounts.containers.environments.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersEnvironmentsPatch : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersEnvironmentsPatchWithObject:accountId:containerId:environmentId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Environment ID. */
@property(nonatomic, copy, nullable) NSString *environmentId;

/**
 *  When provided, this fingerprint must match the fingerprint of the
 *  environment in storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  Fetches a @c GTLRTagManager_Environment.
 *
 *  Updates a GTM Environment. This method supports patch semantics.
 *
 *  @param object The @c GTLRTagManager_Environment to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param environmentId The GTM Environment ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersEnvironmentsPatch
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Environment *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId
                  environmentId:(NSString *)environmentId;

@end

/**
 *  Updates a GTM Environment.
 *
 *  Method: tagmanager.accounts.containers.environments.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersEnvironmentsUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersEnvironmentsUpdateWithObject:accountId:containerId:environmentId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Environment ID. */
@property(nonatomic, copy, nullable) NSString *environmentId;

/**
 *  When provided, this fingerprint must match the fingerprint of the
 *  environment in storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  Fetches a @c GTLRTagManager_Environment.
 *
 *  Updates a GTM Environment.
 *
 *  @param object The @c GTLRTagManager_Environment to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param environmentId The GTM Environment ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersEnvironmentsUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Environment *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId
                  environmentId:(NSString *)environmentId;

@end

/**
 *  Creates a GTM Folder.
 *
 *  Method: tagmanager.accounts.containers.folders.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersFoldersCreate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersFoldersCreateWithObject:accountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_Folder.
 *
 *  Creates a GTM Folder.
 *
 *  @param object The @c GTLRTagManager_Folder to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersFoldersCreate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Folder *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId;

@end

/**
 *  Deletes a GTM Folder.
 *
 *  Method: tagmanager.accounts.containers.folders.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersFoldersDelete : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersFoldersDeleteWithaccountId:containerId:folderId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Folder ID. */
@property(nonatomic, copy, nullable) NSString *folderId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a GTM Folder.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param folderId The GTM Folder ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersFoldersDelete
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                          folderId:(NSString *)folderId;

@end

/**
 *  List all entities in a GTM Folder.
 *
 *  Method: tagmanager.accounts.containers.folders.entities.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersFoldersEntitiesList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersFoldersEntitiesListWithaccountId:containerId:folderId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Folder ID. */
@property(nonatomic, copy, nullable) NSString *folderId;

/**
 *  Fetches a @c GTLRTagManager_FolderEntities.
 *
 *  List all entities in a GTM Folder.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param folderId The GTM Folder ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersFoldersEntitiesList
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                          folderId:(NSString *)folderId;

@end

/**
 *  Gets a GTM Folder.
 *
 *  Method: tagmanager.accounts.containers.folders.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersFoldersGet : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersFoldersGetWithaccountId:containerId:folderId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Folder ID. */
@property(nonatomic, copy, nullable) NSString *folderId;

/**
 *  Fetches a @c GTLRTagManager_Folder.
 *
 *  Gets a GTM Folder.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param folderId The GTM Folder ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersFoldersGet
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                          folderId:(NSString *)folderId;

@end

/**
 *  Lists all GTM Folders of a Container.
 *
 *  Method: tagmanager.accounts.containers.folders.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersFoldersList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersFoldersListWithaccountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_ListFoldersResponse.
 *
 *  Lists all GTM Folders of a Container.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersFoldersList
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId;

@end

/**
 *  Updates a GTM Folder.
 *
 *  Method: tagmanager.accounts.containers.folders.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersFoldersUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersFoldersUpdateWithObject:accountId:containerId:folderId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  When provided, this fingerprint must match the fingerprint of the folder in
 *  storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/** The GTM Folder ID. */
@property(nonatomic, copy, nullable) NSString *folderId;

/**
 *  Fetches a @c GTLRTagManager_Folder.
 *
 *  Updates a GTM Folder.
 *
 *  @param object The @c GTLRTagManager_Folder to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param folderId The GTM Folder ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersFoldersUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Folder *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId
                       folderId:(NSString *)folderId;

@end

/**
 *  Gets a Container.
 *
 *  Method: tagmanager.accounts.containers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersGet : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersGetWithaccountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_Container.
 *
 *  Gets a Container.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersGet
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId;

@end

/**
 *  Lists all Containers that belongs to a GTM Account.
 *
 *  Method: tagmanager.accounts.containers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersListWithaccountId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/**
 *  Fetches a @c GTLRTagManager_ListContainersResponse.
 *
 *  Lists all Containers that belongs to a GTM Account.
 *
 *  @param accountId The GTM Account ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersList
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId;

@end

/**
 *  Moves entities to a GTM Folder.
 *
 *  Method: tagmanager.accounts.containers.move_folders.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersMoveFoldersUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersMoveFoldersUpdateWithObject:accountId:containerId:folderId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Folder ID. */
@property(nonatomic, copy, nullable) NSString *folderId;

/** The tags to be moved to the folder. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tagId;

/** The triggers to be moved to the folder. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *triggerId;

/** The variables to be moved to the folder. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *variableId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Moves entities to a GTM Folder.
 *
 *  @param object The @c GTLRTagManager_Folder to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param folderId The GTM Folder ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersMoveFoldersUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Folder *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId
                       folderId:(NSString *)folderId;

@end

/**
 *  Re-generates the authorization code for a GTM Environment.
 *
 *  Method: tagmanager.accounts.containers.reauthorize_environments.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerPublish
 */
@interface GTLRTagManagerQuery_AccountsContainersReauthorizeEnvironmentsUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersReauthorizeEnvironmentsUpdateWithObject:accountId:containerId:environmentId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Environment ID. */
@property(nonatomic, copy, nullable) NSString *environmentId;

/**
 *  Fetches a @c GTLRTagManager_Environment.
 *
 *  Re-generates the authorization code for a GTM Environment.
 *
 *  @param object The @c GTLRTagManager_Environment to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param environmentId The GTM Environment ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersReauthorizeEnvironmentsUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Environment *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId
                  environmentId:(NSString *)environmentId;

@end

/**
 *  Creates a GTM Tag.
 *
 *  Method: tagmanager.accounts.containers.tags.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersTagsCreate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTagsCreateWithObject:accountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_Tag.
 *
 *  Creates a GTM Tag.
 *
 *  @param object The @c GTLRTagManager_Tag to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTagsCreate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Tag *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId;

@end

/**
 *  Deletes a GTM Tag.
 *
 *  Method: tagmanager.accounts.containers.tags.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersTagsDelete : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTagsDeleteWithaccountId:containerId:tagId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Tag ID. */
@property(nonatomic, copy, nullable) NSString *tagId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a GTM Tag.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param tagId The GTM Tag ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTagsDelete
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                             tagId:(NSString *)tagId;

@end

/**
 *  Gets a GTM Tag.
 *
 *  Method: tagmanager.accounts.containers.tags.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersTagsGet : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTagsGetWithaccountId:containerId:tagId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Tag ID. */
@property(nonatomic, copy, nullable) NSString *tagId;

/**
 *  Fetches a @c GTLRTagManager_Tag.
 *
 *  Gets a GTM Tag.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param tagId The GTM Tag ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTagsGet
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                             tagId:(NSString *)tagId;

@end

/**
 *  Lists all GTM Tags of a Container.
 *
 *  Method: tagmanager.accounts.containers.tags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersTagsList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTagsListWithaccountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_ListTagsResponse.
 *
 *  Lists all GTM Tags of a Container.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTagsList
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId;

@end

/**
 *  Updates a GTM Tag.
 *
 *  Method: tagmanager.accounts.containers.tags.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersTagsUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTagsUpdateWithObject:accountId:containerId:tagId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  When provided, this fingerprint must match the fingerprint of the tag in
 *  storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/** The GTM Tag ID. */
@property(nonatomic, copy, nullable) NSString *tagId;

/**
 *  Fetches a @c GTLRTagManager_Tag.
 *
 *  Updates a GTM Tag.
 *
 *  @param object The @c GTLRTagManager_Tag to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param tagId The GTM Tag ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTagsUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Tag *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId
                          tagId:(NSString *)tagId;

@end

/**
 *  Creates a GTM Trigger.
 *
 *  Method: tagmanager.accounts.containers.triggers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersTriggersCreate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTriggersCreateWithObject:accountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_Trigger.
 *
 *  Creates a GTM Trigger.
 *
 *  @param object The @c GTLRTagManager_Trigger to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTriggersCreate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Trigger *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId;

@end

/**
 *  Deletes a GTM Trigger.
 *
 *  Method: tagmanager.accounts.containers.triggers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersTriggersDelete : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTriggersDeleteWithaccountId:containerId:triggerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Trigger ID. */
@property(nonatomic, copy, nullable) NSString *triggerId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a GTM Trigger.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param triggerId The GTM Trigger ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTriggersDelete
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                         triggerId:(NSString *)triggerId;

@end

/**
 *  Gets a GTM Trigger.
 *
 *  Method: tagmanager.accounts.containers.triggers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersTriggersGet : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTriggersGetWithaccountId:containerId:triggerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Trigger ID. */
@property(nonatomic, copy, nullable) NSString *triggerId;

/**
 *  Fetches a @c GTLRTagManager_Trigger.
 *
 *  Gets a GTM Trigger.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param triggerId The GTM Trigger ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTriggersGet
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                         triggerId:(NSString *)triggerId;

@end

/**
 *  Lists all GTM Triggers of a Container.
 *
 *  Method: tagmanager.accounts.containers.triggers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersTriggersList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTriggersListWithaccountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_ListTriggersResponse.
 *
 *  Lists all GTM Triggers of a Container.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTriggersList
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId;

@end

/**
 *  Updates a GTM Trigger.
 *
 *  Method: tagmanager.accounts.containers.triggers.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersTriggersUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersTriggersUpdateWithObject:accountId:containerId:triggerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  When provided, this fingerprint must match the fingerprint of the trigger in
 *  storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/** The GTM Trigger ID. */
@property(nonatomic, copy, nullable) NSString *triggerId;

/**
 *  Fetches a @c GTLRTagManager_Trigger.
 *
 *  Updates a GTM Trigger.
 *
 *  @param object The @c GTLRTagManager_Trigger to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param triggerId The GTM Trigger ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersTriggersUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Trigger *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId
                      triggerId:(NSString *)triggerId;

@end

/**
 *  Updates a Container.
 *
 *  Method: tagmanager.accounts.containers.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersUpdateWithObject:accountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  When provided, this fingerprint must match the fingerprint of the container
 *  in storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  Fetches a @c GTLRTagManager_Container.
 *
 *  Updates a Container.
 *
 *  @param object The @c GTLRTagManager_Container to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Container *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId;

@end

/**
 *  Creates a GTM Variable.
 *
 *  Method: tagmanager.accounts.containers.variables.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersVariablesCreate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVariablesCreateWithObject:accountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_Variable.
 *
 *  Creates a GTM Variable.
 *
 *  @param object The @c GTLRTagManager_Variable to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVariablesCreate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Variable *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId;

@end

/**
 *  Deletes a GTM Variable.
 *
 *  Method: tagmanager.accounts.containers.variables.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersVariablesDelete : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVariablesDeleteWithaccountId:containerId:variableId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Variable ID. */
@property(nonatomic, copy, nullable) NSString *variableId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a GTM Variable.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param variableId The GTM Variable ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVariablesDelete
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                        variableId:(NSString *)variableId;

@end

/**
 *  Gets a GTM Variable.
 *
 *  Method: tagmanager.accounts.containers.variables.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersVariablesGet : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVariablesGetWithaccountId:containerId:variableId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Variable ID. */
@property(nonatomic, copy, nullable) NSString *variableId;

/**
 *  Fetches a @c GTLRTagManager_Variable.
 *
 *  Gets a GTM Variable.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param variableId The GTM Variable ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVariablesGet
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                        variableId:(NSString *)variableId;

@end

/**
 *  Lists all GTM Variables of a Container.
 *
 *  Method: tagmanager.accounts.containers.variables.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersVariablesList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVariablesListWithaccountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_ListVariablesResponse.
 *
 *  Lists all GTM Variables of a Container.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVariablesList
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId;

@end

/**
 *  Updates a GTM Variable.
 *
 *  Method: tagmanager.accounts.containers.variables.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersVariablesUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVariablesUpdateWithObject:accountId:containerId:variableId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  When provided, this fingerprint must match the fingerprint of the variable
 *  in storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/** The GTM Variable ID. */
@property(nonatomic, copy, nullable) NSString *variableId;

/**
 *  Fetches a @c GTLRTagManager_Variable.
 *
 *  Updates a GTM Variable.
 *
 *  @param object The @c GTLRTagManager_Variable to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param variableId The GTM Variable ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVariablesUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Variable *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId
                     variableId:(NSString *)variableId;

@end

/**
 *  Creates a Container Version.
 *
 *  Method: tagmanager.accounts.containers.versions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainerversions
 */
@interface GTLRTagManagerQuery_AccountsContainersVersionsCreate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVersionsCreateWithObject:accountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Fetches a @c GTLRTagManager_CreateContainerVersionResponse.
 *
 *  Creates a Container Version.
 *
 *  @param object The @c
 *    GTLRTagManager_CreateContainerVersionRequestVersionOptions to include in
 *    the query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_CreateContainerVersionRequestVersionOptions *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId;

@end

/**
 *  Deletes a Container Version.
 *
 *  Method: tagmanager.accounts.containers.versions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainerversions
 */
@interface GTLRTagManagerQuery_AccountsContainersVersionsDelete : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVersionsDeleteWithaccountId:containerId:containerVersionId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Container Version ID. */
@property(nonatomic, copy, nullable) NSString *containerVersionId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Deletes a Container Version.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param containerVersionId The GTM Container Version ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVersionsDelete
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                containerVersionId:(NSString *)containerVersionId;

@end

/**
 *  Gets a Container Version.
 *
 *  Method: tagmanager.accounts.containers.versions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerEditContainerversions
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersVersionsGet : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVersionsGetWithaccountId:containerId:containerVersionId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  The GTM Container Version ID. Specify published to retrieve the currently
 *  published version.
 */
@property(nonatomic, copy, nullable) NSString *containerVersionId;

/**
 *  Fetches a @c GTLRTagManager_ContainerVersion.
 *
 *  Gets a Container Version.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param containerVersionId The GTM Container Version ID. Specify published to
 *    retrieve the currently published version.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVersionsGet
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                containerVersionId:(NSString *)containerVersionId;

@end

/**
 *  Lists all Container Versions of a GTM Container.
 *
 *  Method: tagmanager.accounts.containers.versions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerEditContainerversions
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsContainersVersionsList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVersionsListWithaccountId:containerId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/**
 *  Retrieve headers only when true.
 *
 *  @note If not set, the documented server-side default will be false.
 */
@property(nonatomic, assign) BOOL headers;

/**
 *  Also retrieve deleted (archived) versions when true.
 *
 *  @note If not set, the documented server-side default will be false.
 */
@property(nonatomic, assign) BOOL includeDeleted;

/**
 *  Fetches a @c GTLRTagManager_ListContainerVersionsResponse.
 *
 *  Lists all Container Versions of a GTM Container.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVersionsList
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId;

@end

/**
 *  Publishes a Container Version.
 *
 *  Method: tagmanager.accounts.containers.versions.publish
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerPublish
 */
@interface GTLRTagManagerQuery_AccountsContainersVersionsPublish : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVersionsPublishWithaccountId:containerId:containerVersionId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Container Version ID. */
@property(nonatomic, copy, nullable) NSString *containerVersionId;

/**
 *  When provided, this fingerprint must match the fingerprint of the container
 *  version in storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  Fetches a @c GTLRTagManager_PublishContainerVersionResponse.
 *
 *  Publishes a Container Version.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param containerVersionId The GTM Container Version ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVersionsPublish
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                containerVersionId:(NSString *)containerVersionId;

@end

/**
 *  Restores a Container Version. This will overwrite the container's current
 *  configuration (including its variables, triggers and tags). The operation
 *  will not have any effect on the version that is being served (i.e. the
 *  published version).
 *
 *  Method: tagmanager.accounts.containers.versions.restore
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 */
@interface GTLRTagManagerQuery_AccountsContainersVersionsRestore : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVersionsRestoreWithaccountId:containerId:containerVersionId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Container Version ID. */
@property(nonatomic, copy, nullable) NSString *containerVersionId;

/**
 *  Fetches a @c GTLRTagManager_ContainerVersion.
 *
 *  Restores a Container Version. This will overwrite the container's current
 *  configuration (including its variables, triggers and tags). The operation
 *  will not have any effect on the version that is being served (i.e. the
 *  published version).
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param containerVersionId The GTM Container Version ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVersionsRestore
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                containerVersionId:(NSString *)containerVersionId;

@end

/**
 *  Undeletes a Container Version.
 *
 *  Method: tagmanager.accounts.containers.versions.undelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainerversions
 */
@interface GTLRTagManagerQuery_AccountsContainersVersionsUndelete : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVersionsUndeleteWithaccountId:containerId:containerVersionId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Container Version ID. */
@property(nonatomic, copy, nullable) NSString *containerVersionId;

/**
 *  Fetches a @c GTLRTagManager_ContainerVersion.
 *
 *  Undeletes a Container Version.
 *
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param containerVersionId The GTM Container Version ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVersionsUndelete
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                       containerId:(NSString *)containerId
                containerVersionId:(NSString *)containerVersionId;

@end

/**
 *  Updates a Container Version.
 *
 *  Method: tagmanager.accounts.containers.versions.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainerversions
 */
@interface GTLRTagManagerQuery_AccountsContainersVersionsUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsContainersVersionsUpdateWithObject:accountId:containerId:containerVersionId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM Container ID. */
@property(nonatomic, copy, nullable) NSString *containerId;

/** The GTM Container Version ID. */
@property(nonatomic, copy, nullable) NSString *containerVersionId;

/**
 *  When provided, this fingerprint must match the fingerprint of the container
 *  version in storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  Fetches a @c GTLRTagManager_ContainerVersion.
 *
 *  Updates a Container Version.
 *
 *  @param object The @c GTLRTagManager_ContainerVersion to include in the
 *    query.
 *  @param accountId The GTM Account ID.
 *  @param containerId The GTM Container ID.
 *  @param containerVersionId The GTM Container Version ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsContainersVersionsUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_ContainerVersion *)object
                      accountId:(NSString *)accountId
                    containerId:(NSString *)containerId
             containerVersionId:(NSString *)containerVersionId;

@end

/**
 *  Gets a GTM Account.
 *
 *  Method: tagmanager.accounts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerManageAccounts
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsGet : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsGetWithaccountId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/**
 *  Fetches a @c GTLRTagManager_Account.
 *
 *  Gets a GTM Account.
 *
 *  @param accountId The GTM Account ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsGet
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId;

@end

/**
 *  Lists all GTM Accounts that a user has access to.
 *
 *  Method: tagmanager.accounts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerEditContainers
 *    @c kGTLRAuthScopeTagManagerManageAccounts
 *    @c kGTLRAuthScopeTagManagerReadonly
 */
@interface GTLRTagManagerQuery_AccountsList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsList]

/**
 *  Fetches a @c GTLRTagManager_ListAccountsResponse.
 *
 *  Lists all GTM Accounts that a user has access to.
 *
 *  @returns GTLRTagManagerQuery_AccountsList
 */
+ (instancetype)query;

@end

/**
 *  Creates a user's Account & Container Permissions.
 *
 *  Method: tagmanager.accounts.permissions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerManageUsers
 */
@interface GTLRTagManagerQuery_AccountsPermissionsCreate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsPermissionsCreateWithObject:accountId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/**
 *  Fetches a @c GTLRTagManager_UserAccess.
 *
 *  Creates a user's Account & Container Permissions.
 *
 *  @param object The @c GTLRTagManager_UserAccess to include in the query.
 *  @param accountId The GTM Account ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsPermissionsCreate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_UserAccess *)object
                      accountId:(NSString *)accountId;

@end

/**
 *  Removes a user from the account, revoking access to it and all of its
 *  containers.
 *
 *  Method: tagmanager.accounts.permissions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerManageUsers
 */
@interface GTLRTagManagerQuery_AccountsPermissionsDelete : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsPermissionsDeleteWithaccountId:permissionId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM User ID. */
@property(nonatomic, copy, nullable) NSString *permissionId;

/**
 *  Upon successful completion, the callback's object and error parameters will
 *  be nil. This query does not fetch an object.
 *
 *  Removes a user from the account, revoking access to it and all of its
 *  containers.
 *
 *  @param accountId The GTM Account ID.
 *  @param permissionId The GTM User ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsPermissionsDelete
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                      permissionId:(NSString *)permissionId;

@end

/**
 *  Gets a user's Account & Container Permissions.
 *
 *  Method: tagmanager.accounts.permissions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerManageUsers
 */
@interface GTLRTagManagerQuery_AccountsPermissionsGet : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsPermissionsGetWithaccountId:permissionId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM User ID. */
@property(nonatomic, copy, nullable) NSString *permissionId;

/**
 *  Fetches a @c GTLRTagManager_UserAccess.
 *
 *  Gets a user's Account & Container Permissions.
 *
 *  @param accountId The GTM Account ID.
 *  @param permissionId The GTM User ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsPermissionsGet
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId
                      permissionId:(NSString *)permissionId;

@end

/**
 *  List all users that have access to the account along with Account and
 *  Container Permissions granted to each of them.
 *
 *  Method: tagmanager.accounts.permissions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerManageUsers
 */
@interface GTLRTagManagerQuery_AccountsPermissionsList : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsPermissionsListWithaccountId:]

/** The GTM Account ID. \@required tagmanager.accounts.permissions.list */
@property(nonatomic, copy, nullable) NSString *accountId;

/**
 *  Fetches a @c GTLRTagManager_ListAccountUsersResponse.
 *
 *  List all users that have access to the account along with Account and
 *  Container Permissions granted to each of them.
 *
 *  @param accountId The GTM Account ID. \@required
 *    tagmanager.accounts.permissions.list
 *
 *  @returns GTLRTagManagerQuery_AccountsPermissionsList
 */
+ (instancetype)queryWithAccountId:(NSString *)accountId;

@end

/**
 *  Updates a user's Account & Container Permissions.
 *
 *  Method: tagmanager.accounts.permissions.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerManageUsers
 */
@interface GTLRTagManagerQuery_AccountsPermissionsUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsPermissionsUpdateWithObject:accountId:permissionId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** The GTM User ID. */
@property(nonatomic, copy, nullable) NSString *permissionId;

/**
 *  Fetches a @c GTLRTagManager_UserAccess.
 *
 *  Updates a user's Account & Container Permissions.
 *
 *  @param object The @c GTLRTagManager_UserAccess to include in the query.
 *  @param accountId The GTM Account ID.
 *  @param permissionId The GTM User ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsPermissionsUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_UserAccess *)object
                      accountId:(NSString *)accountId
                   permissionId:(NSString *)permissionId;

@end

/**
 *  Updates a GTM Account.
 *
 *  Method: tagmanager.accounts.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeTagManagerManageAccounts
 */
@interface GTLRTagManagerQuery_AccountsUpdate : GTLRTagManagerQuery
// Previous library name was
//   +[GTLQueryTagManager queryForAccountsUpdateWithObject:accountId:]

/** The GTM Account ID. */
@property(nonatomic, copy, nullable) NSString *accountId;

/**
 *  When provided, this fingerprint must match the fingerprint of the account in
 *  storage.
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  Fetches a @c GTLRTagManager_Account.
 *
 *  Updates a GTM Account.
 *
 *  @param object The @c GTLRTagManager_Account to include in the query.
 *  @param accountId The GTM Account ID.
 *
 *  @returns GTLRTagManagerQuery_AccountsUpdate
 */
+ (instancetype)queryWithObject:(GTLRTagManager_Account *)object
                      accountId:(NSString *)accountId;

@end

NS_ASSUME_NONNULL_END
