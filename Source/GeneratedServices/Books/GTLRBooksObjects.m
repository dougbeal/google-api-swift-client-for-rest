// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Books API (books/v1)
// Description:
//   Searches for books and manages your Google Books library.
// Documentation:
//   https://developers.google.com/books/docs/v1/getting_started

#import "GTLRBooksObjects.h"

// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotation
//

@implementation GTLRBooks_Annotation
@dynamic afterSelectedText, beforeSelectedText, clientVersionRanges, created,
         currentVersionRanges, data, deleted, highlightStyle, identifier, kind,
         layerId, layerSummary, pageIds, selectedText, selfLink, updated,
         volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pageIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_AnnotationClientVersionRanges
//

@implementation GTLRBooks_AnnotationClientVersionRanges
@dynamic cfiRange, contentVersion, gbImageRange, gbTextRange, imageCfiRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_AnnotationCurrentVersionRanges
//

@implementation GTLRBooks_AnnotationCurrentVersionRanges
@dynamic cfiRange, contentVersion, gbImageRange, gbTextRange, imageCfiRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_AnnotationLayerSummary
//

@implementation GTLRBooks_AnnotationLayerSummary
@dynamic allowedCharacterCount, limitType, remainingCharacterCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotationdata
//

@implementation GTLRBooks_Annotationdata
@dynamic annotationType, data, encodedData, identifier, kind, layerId, selfLink,
         updated, volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"encodedData" : @"encoded_data",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotations
//

@implementation GTLRBooks_Annotations
@dynamic items, kind, nextPageToken, totalItems;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Annotation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Annotationsdata
//

@implementation GTLRBooks_Annotationsdata
@dynamic items, kind, nextPageToken, totalItems;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Annotationdata class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_AnnotationsRange
//

@implementation GTLRBooks_AnnotationsRange
@dynamic endOffset, endPosition, startOffset, startPosition;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_AnnotationsSummary
//

@implementation GTLRBooks_AnnotationsSummary
@dynamic kind, layers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"layers" : [GTLRBooks_AnnotationsSummaryLayersItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_AnnotationsSummaryLayersItem
//

@implementation GTLRBooks_AnnotationsSummaryLayersItem
@dynamic allowedCharacterCount, layerId, limitType, remainingCharacterCount,
         updated;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Bookshelf
//

@implementation GTLRBooks_Bookshelf
@dynamic access, created, descriptionProperty, identifier, kind, selfLink,
         title, updated, volumeCount, volumesLastUpdated;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Bookshelves
//

@implementation GTLRBooks_Bookshelves
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Bookshelf class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Category
//

@implementation GTLRBooks_Category
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_CategoryItemsItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_CategoryItemsItem
//

@implementation GTLRBooks_CategoryItemsItem
@dynamic badgeUrl, categoryId, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_CloudloadingResource
//

@implementation GTLRBooks_CloudloadingResource
@dynamic author, processingState, title, volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_ConcurrentAccessRestriction
//

@implementation GTLRBooks_ConcurrentAccessRestriction
@dynamic deviceAllowed, kind, maxConcurrentDevices, message, nonce, reasonCode,
         restricted, signature, source, timeWindowSeconds, volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Dictlayerdata
//

@implementation GTLRBooks_Dictlayerdata
@dynamic common, dict, kind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataCommon
//

@implementation GTLRBooks_DictlayerdataCommon
@dynamic title;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDict
//

@implementation GTLRBooks_DictlayerdataDict
@dynamic source, words;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"words" : [GTLRBooks_DictlayerdataDictWordsItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictSource
//

@implementation GTLRBooks_DictlayerdataDictSource
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItem
//

@implementation GTLRBooks_DictlayerdataDictWordsItem
@dynamic derivatives, examples, senses, source;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"derivatives" : [GTLRBooks_DictlayerdataDictWordsItemDerivativesItem class],
    @"examples" : [GTLRBooks_DictlayerdataDictWordsItemExamplesItem class],
    @"senses" : [GTLRBooks_DictlayerdataDictWordsItemSensesItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemDerivativesItem
//

@implementation GTLRBooks_DictlayerdataDictWordsItemDerivativesItem
@dynamic source, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemExamplesItem
//

@implementation GTLRBooks_DictlayerdataDictWordsItemExamplesItem
@dynamic source, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemSensesItem
//

@implementation GTLRBooks_DictlayerdataDictWordsItemSensesItem
@dynamic conjugations, definitions, partOfSpeech, pronunciation,
         pronunciationUrl, source, syllabification, synonyms;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conjugations" : [GTLRBooks_DictlayerdataDictWordsItemSensesItemConjugationsItem class],
    @"definitions" : [GTLRBooks_DictlayerdataDictWordsItemSensesItemDefinitionsItem class],
    @"synonyms" : [GTLRBooks_DictlayerdataDictWordsItemSensesItemSynonymsItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemSource
//

@implementation GTLRBooks_DictlayerdataDictWordsItemSource
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemDerivativesItemSource
//

@implementation GTLRBooks_DictlayerdataDictWordsItemDerivativesItemSource
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemExamplesItemSource
//

@implementation GTLRBooks_DictlayerdataDictWordsItemExamplesItemSource
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemSensesItemConjugationsItem
//

@implementation GTLRBooks_DictlayerdataDictWordsItemSensesItemConjugationsItem
@dynamic type, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemSensesItemDefinitionsItem
//

@implementation GTLRBooks_DictlayerdataDictWordsItemSensesItemDefinitionsItem
@dynamic definition, examples;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"examples" : [GTLRBooks_DictlayerdataDictWordsItemSensesItemDefinitionsItemExamplesItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemSensesItemSource
//

@implementation GTLRBooks_DictlayerdataDictWordsItemSensesItemSource
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemSensesItemSynonymsItem
//

@implementation GTLRBooks_DictlayerdataDictWordsItemSensesItemSynonymsItem
@dynamic source, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemSensesItemDefinitionsItemExamplesItem
//

@implementation GTLRBooks_DictlayerdataDictWordsItemSensesItemDefinitionsItemExamplesItem
@dynamic source, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemSensesItemSynonymsItemSource
//

@implementation GTLRBooks_DictlayerdataDictWordsItemSensesItemSynonymsItemSource
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DictlayerdataDictWordsItemSensesItemDefinitionsItemExamplesItemSource
//

@implementation GTLRBooks_DictlayerdataDictWordsItemSensesItemDefinitionsItemExamplesItemSource
@dynamic attribution, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Discoveryclusters
//

@implementation GTLRBooks_Discoveryclusters
@dynamic clusters, kind, totalClusters;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"clusters" : [GTLRBooks_DiscoveryclustersClustersItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DiscoveryclustersClustersItem
//

@implementation GTLRBooks_DiscoveryclustersClustersItem
@dynamic bannerWithContentContainer, subTitle, title, totalVolumes, uid,
         volumes;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"bannerWithContentContainer" : @"banner_with_content_container" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"volumes" : [GTLRBooks_Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DiscoveryclustersClustersItemBannerWithContentContainer
//

@implementation GTLRBooks_DiscoveryclustersClustersItemBannerWithContentContainer
@dynamic fillColorArgb, imageUrl, maskColorArgb, moreButtonText, moreButtonUrl,
         textColorArgb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DownloadAccesses
//

@implementation GTLRBooks_DownloadAccesses
@dynamic downloadAccessList, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"downloadAccessList" : [GTLRBooks_DownloadAccessRestriction class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_DownloadAccessRestriction
//

@implementation GTLRBooks_DownloadAccessRestriction
@dynamic deviceAllowed, downloadsAcquired, justAcquired, kind,
         maxDownloadDevices, message, nonce, reasonCode, restricted, signature,
         source, volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Geolayerdata
//

@implementation GTLRBooks_Geolayerdata
@dynamic common, geo, kind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_GeolayerdataCommon
//

@implementation GTLRBooks_GeolayerdataCommon
@dynamic lang, previewImageUrl, snippet, snippetUrl, title;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_GeolayerdataGeo
//

@implementation GTLRBooks_GeolayerdataGeo
@dynamic boundary, cachePolicy, countryCode, latitude, longitude, mapType,
         viewport, zoom;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"boundary" : [GTLRBooks_GeolayerdataGeoBoundaryItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_GeolayerdataGeoBoundaryItem
//

@implementation GTLRBooks_GeolayerdataGeoBoundaryItem
@dynamic latitude, longitude;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_GeolayerdataGeoViewport
//

@implementation GTLRBooks_GeolayerdataGeoViewport
@dynamic hi, lo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_GeolayerdataGeoViewportHi
//

@implementation GTLRBooks_GeolayerdataGeoViewportHi
@dynamic latitude, longitude;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_GeolayerdataGeoViewportLo
//

@implementation GTLRBooks_GeolayerdataGeoViewportLo
@dynamic latitude, longitude;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Layersummaries
//

@implementation GTLRBooks_Layersummaries
@dynamic items, kind, totalItems;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Layersummary class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Layersummary
//

@implementation GTLRBooks_Layersummary
@dynamic annotationCount, annotationsDataLink, annotationsLink, annotationTypes,
         contentVersion, dataCount, identifier, kind, layerId, selfLink,
         updated, volumeAnnotationsVersion, volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"annotationTypes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Metadata
//

@implementation GTLRBooks_Metadata
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_MetadataItemsItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_MetadataItemsItem
//

@implementation GTLRBooks_MetadataItemsItem
@dynamic downloadUrl, encryptedKey, language, size, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"downloadUrl" : @"download_url",
    @"encryptedKey" : @"encrypted_key"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Notification
//

@implementation GTLRBooks_Notification
@dynamic body, crmExperimentIds, docId, docType, dontShowNotification, iconUrl,
         kind, notificationType, pcampaignId, reason,
         showNotificationSettingsAction, targetUrl, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"docId" : @"doc_id",
    @"docType" : @"doc_type",
    @"dontShowNotification" : @"dont_show_notification",
    @"notificationType" : @"notification_type",
    @"pcampaignId" : @"pcampaign_id",
    @"showNotificationSettingsAction" : @"show_notification_settings_action"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"crmExperimentIds" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Offers
//

@implementation GTLRBooks_Offers
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_OffersItemsItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_OffersItemsItem
//

@implementation GTLRBooks_OffersItemsItem
@dynamic artUrl, gservicesKey, identifier, items;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_OffersItemsItemItemsItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_OffersItemsItemItemsItem
//

@implementation GTLRBooks_OffersItemsItemItemsItem
@dynamic author, canonicalVolumeLink, coverUrl, descriptionProperty, title,
         volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_ReadingPosition
//

@implementation GTLRBooks_ReadingPosition
@dynamic epubCfiPosition, gbImagePosition, gbTextPosition, kind, pdfPosition,
         updated, volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_RequestAccess
//

@implementation GTLRBooks_RequestAccess
@dynamic concurrentAccess, downloadAccess, kind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Review
//

@implementation GTLRBooks_Review
@dynamic author, content, date, fullTextUrl, kind, rating, source, title, type,
         volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_ReviewAuthor
//

@implementation GTLRBooks_ReviewAuthor
@dynamic displayName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_ReviewSource
//

@implementation GTLRBooks_ReviewSource
@dynamic descriptionProperty, extraDescription, url;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Series
//

@implementation GTLRBooks_Series
@dynamic kind, series;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"series" : [GTLRBooks_SeriesSeriesItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_SeriesSeriesItem
//

@implementation GTLRBooks_SeriesSeriesItem
@dynamic bannerImageUrl, imageUrl, seriesId, seriesType, title;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Seriesmembership
//

@implementation GTLRBooks_Seriesmembership
@dynamic kind, member, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"member" : [GTLRBooks_Volume class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"member";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Usersettings
//

@implementation GTLRBooks_Usersettings
@dynamic kind, notesExport, notification;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_UsersettingsNotesExport
//

@implementation GTLRBooks_UsersettingsNotesExport
@dynamic folderName, isEnabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_UsersettingsNotification
//

@implementation GTLRBooks_UsersettingsNotification
@dynamic moreFromAuthors, moreFromSeries;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_UsersettingsNotificationMoreFromAuthors
//

@implementation GTLRBooks_UsersettingsNotificationMoreFromAuthors
@dynamic optedState;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"optedState" : @"opted_state" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_UsersettingsNotificationMoreFromSeries
//

@implementation GTLRBooks_UsersettingsNotificationMoreFromSeries
@dynamic optedState;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"optedState" : @"opted_state" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume
//

@implementation GTLRBooks_Volume
@dynamic accessInfo, ETag, identifier, kind, layerInfo, recommendedInfo,
         saleInfo, searchInfo, selfLink, userInfo, volumeInfo;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeAccessInfo
//

@implementation GTLRBooks_VolumeAccessInfo
@dynamic accessViewStatus, country, downloadAccess, driveImportedContentLink,
         embeddable, epub, explicitOfflineLicenseManagement, pdf, publicDomain,
         quoteSharingAllowed, textToSpeechPermission, viewability, viewOrderUrl,
         webReaderLink;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeLayerInfo
//

@implementation GTLRBooks_VolumeLayerInfo
@dynamic layers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"layers" : [GTLRBooks_VolumeLayerInfoLayersItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeRecommendedInfo
//

@implementation GTLRBooks_VolumeRecommendedInfo
@dynamic explanation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeSaleInfo
//

@implementation GTLRBooks_VolumeSaleInfo
@dynamic buyLink, country, isEbook, listPrice, offers, onSaleDate, retailPrice,
         saleability;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"offers" : [GTLRBooks_VolumeSaleInfoOffersItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeSearchInfo
//

@implementation GTLRBooks_VolumeSearchInfo
@dynamic textSnippet;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeUserInfo
//

@implementation GTLRBooks_VolumeUserInfo
@dynamic acquiredTime, acquisitionType, copyProperty, entitlementType,
         familySharing, isFamilySharedFromUser, isFamilySharedToUser,
         isFamilySharingAllowed, isFamilySharingDisabledByFop, isInMyBooks,
         isPreordered, isPurchased, isUploaded, readingPosition, rentalPeriod,
         rentalState, review, updated, userUploadedVolumeInfo;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"copyProperty" : @"copy" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeVolumeInfo
//

@implementation GTLRBooks_VolumeVolumeInfo
@dynamic allowAnonLogging, authors, averageRating, canonicalVolumeLink,
         categories, contentVersion, descriptionProperty, dimensions,
         imageLinks, industryIdentifiers, infoLink, language, mainCategory,
         maturityRating, pageCount, panelizationSummary, previewLink,
         printedPageCount, printType, publishedDate, publisher, ratingsCount,
         readingModes, samplePageCount, seriesInfo, subtitle, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"authors" : [NSString class],
    @"categories" : [NSString class],
    @"industryIdentifiers" : [GTLRBooks_VolumeVolumeInfoIndustryIdentifiersItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeAccessInfoEpub
//

@implementation GTLRBooks_VolumeAccessInfoEpub
@dynamic acsTokenLink, downloadLink, isAvailable;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeAccessInfoPdf
//

@implementation GTLRBooks_VolumeAccessInfoPdf
@dynamic acsTokenLink, downloadLink, isAvailable;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeLayerInfoLayersItem
//

@implementation GTLRBooks_VolumeLayerInfoLayersItem
@dynamic layerId, volumeAnnotationsVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeSaleInfoListPrice
//

@implementation GTLRBooks_VolumeSaleInfoListPrice
@dynamic amount, currencyCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeSaleInfoOffersItem
//

@implementation GTLRBooks_VolumeSaleInfoOffersItem
@dynamic finskyOfferType, giftable, listPrice, rentalDuration, retailPrice;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeSaleInfoRetailPrice
//

@implementation GTLRBooks_VolumeSaleInfoRetailPrice
@dynamic amount, currencyCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeUserInfoCopy
//

@implementation GTLRBooks_VolumeUserInfoCopy
@dynamic allowedCharacterCount, limitType, remainingCharacterCount, updated;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeUserInfoFamilySharing
//

@implementation GTLRBooks_VolumeUserInfoFamilySharing
@dynamic familyRole, isSharingAllowed, isSharingDisabledByFop;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeUserInfoRentalPeriod
//

@implementation GTLRBooks_VolumeUserInfoRentalPeriod
@dynamic endUtcSec, startUtcSec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeUserInfoUserUploadedVolumeInfo
//

@implementation GTLRBooks_VolumeUserInfoUserUploadedVolumeInfo
@dynamic processingState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeVolumeInfoDimensions
//

@implementation GTLRBooks_VolumeVolumeInfoDimensions
@dynamic height, thickness, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeVolumeInfoImageLinks
//

@implementation GTLRBooks_VolumeVolumeInfoImageLinks
@dynamic extraLarge, large, medium, small, smallThumbnail, thumbnail;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeVolumeInfoIndustryIdentifiersItem
//

@implementation GTLRBooks_VolumeVolumeInfoIndustryIdentifiersItem
@dynamic identifierProperty, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifierProperty" : @"identifier" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeVolumeInfoPanelizationSummary
//

@implementation GTLRBooks_VolumeVolumeInfoPanelizationSummary
@dynamic containsEpubBubbles, containsImageBubbles, epubBubbleVersion,
         imageBubbleVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeSaleInfoOffersItemListPrice
//

@implementation GTLRBooks_VolumeSaleInfoOffersItemListPrice
@dynamic amountInMicros, currencyCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeSaleInfoOffersItemRentalDuration
//

@implementation GTLRBooks_VolumeSaleInfoOffersItemRentalDuration
@dynamic count, unit;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeSaleInfoOffersItemRetailPrice
//

@implementation GTLRBooks_VolumeSaleInfoOffersItemRetailPrice
@dynamic amountInMicros, currencyCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volume2
//

@implementation GTLRBooks_Volume2
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumeannotation
//

@implementation GTLRBooks_Volumeannotation
@dynamic annotationDataId, annotationDataLink, annotationType, contentRanges,
         data, deleted, identifier, kind, layerId, pageIds, selectedText,
         selfLink, updated, volumeId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pageIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeannotationContentRanges
//

@implementation GTLRBooks_VolumeannotationContentRanges
@dynamic cfiRange, contentVersion, gbImageRange, gbTextRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumeannotations
//

@implementation GTLRBooks_Volumeannotations
@dynamic items, kind, nextPageToken, totalItems, version;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Volumeannotation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumes
//

@implementation GTLRBooks_Volumes
@dynamic items, kind, totalItems;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRBooks_Volume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_Volumeseriesinfo
//

@implementation GTLRBooks_Volumeseriesinfo
@dynamic bookDisplayNumber, kind, shortSeriesBookTitle, volumeSeries;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"volumeSeries" : [GTLRBooks_VolumeseriesinfoVolumeSeriesItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeseriesinfoVolumeSeriesItem
//

@implementation GTLRBooks_VolumeseriesinfoVolumeSeriesItem
@dynamic issue, orderNumber, seriesBookType, seriesId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"issue" : [GTLRBooks_VolumeseriesinfoVolumeSeriesItemIssueItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumeseriesinfoVolumeSeriesItemIssueItem
//

@implementation GTLRBooks_VolumeseriesinfoVolumeSeriesItemIssueItem
@dynamic issueDisplayNumber, issueOrderNumber;
@end


// ----------------------------------------------------------------------------
//
//   GTLRBooks_VolumesRecommendedRateResponse
//

@implementation GTLRBooks_VolumesRecommendedRateResponse
@dynamic consistencyToken;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"consistencyToken" : @"consistency_token" };
}

@end
