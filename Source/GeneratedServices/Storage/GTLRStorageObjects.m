// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Storage JSON API (storage/v1)
// Description:
//   Stores and retrieves potentially large, immutable data objects.
// Documentation:
//   https://developers.google.com/storage/docs/json_api/

#import "GTLRStorageObjects.h"

// ----------------------------------------------------------------------------
//
//   GTLRStorage_Bucket
//

@implementation GTLRStorage_Bucket
@dynamic acl, cors, defaultObjectAcl, ETag, identifier, kind, lifecycle,
         location, logging, metageneration, name, owner, projectNumber,
         selfLink, storageClass, timeCreated, updated, versioning, website;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"acl" : [GTLRStorage_BucketAccessControl class],
    @"cors" : [GTLRStorage_BucketCorsItem class],
    @"defaultObjectAcl" : [GTLRStorage_ObjectAccessControl class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketCorsItem
//

@implementation GTLRStorage_BucketCorsItem
@dynamic maxAgeSeconds, method, origin, responseHeader;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"method" : [NSString class],
    @"origin" : [NSString class],
    @"responseHeader" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketLifecycle
//

@implementation GTLRStorage_BucketLifecycle
@dynamic rule;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rule" : [GTLRStorage_BucketLifecycleRuleItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketLogging
//

@implementation GTLRStorage_BucketLogging
@dynamic logBucket, logObjectPrefix;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketOwner
//

@implementation GTLRStorage_BucketOwner
@dynamic entity, entityId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketVersioning
//

@implementation GTLRStorage_BucketVersioning
@dynamic enabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketWebsite
//

@implementation GTLRStorage_BucketWebsite
@dynamic mainPageSuffix, notFoundPage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketLifecycleRuleItem
//

@implementation GTLRStorage_BucketLifecycleRuleItem
@dynamic action, condition;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketLifecycleRuleItemAction
//

@implementation GTLRStorage_BucketLifecycleRuleItemAction
@dynamic storageClass, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketLifecycleRuleItemCondition
//

@implementation GTLRStorage_BucketLifecycleRuleItemCondition
@dynamic age, createdBefore, isLive, matchesStorageClass, numNewerVersions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"matchesStorageClass" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketAccessControl
//

@implementation GTLRStorage_BucketAccessControl
@dynamic bucket, domain, email, entity, entityId, ETag, identifier, kind,
         projectTeam, role, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketAccessControlProjectTeam
//

@implementation GTLRStorage_BucketAccessControlProjectTeam
@dynamic projectNumber, team;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_BucketAccessControls
//

@implementation GTLRStorage_BucketAccessControls
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRStorage_BucketAccessControl class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_Buckets
//

@implementation GTLRStorage_Buckets
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRStorage_Bucket class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_Channel
//

@implementation GTLRStorage_Channel
@dynamic address, expiration, identifier, kind, params, payload, resourceId,
         resourceUri, token, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ChannelParams
//

@implementation GTLRStorage_ChannelParams

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ComposeRequest
//

@implementation GTLRStorage_ComposeRequest
@dynamic destination, kind, sourceObjects;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sourceObjects" : [GTLRStorage_ComposeRequestSourceObjectsItem class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ComposeRequestSourceObjectsItem
//

@implementation GTLRStorage_ComposeRequestSourceObjectsItem
@dynamic generation, name, objectPreconditions;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ComposeRequestSourceObjectsItemObjectPreconditions
//

@implementation GTLRStorage_ComposeRequestSourceObjectsItemObjectPreconditions
@dynamic ifGenerationMatch;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_Object
//

@implementation GTLRStorage_Object
@dynamic acl, bucket, cacheControl, componentCount, contentDisposition,
         contentEncoding, contentLanguage, contentType, crc32c,
         customerEncryption, ETag, generation, identifier, kind, md5Hash,
         mediaLink, metadata, metageneration, name, owner, selfLink, size,
         storageClass, timeCreated, timeDeleted, updated;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"acl" : [GTLRStorage_ObjectAccessControl class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ObjectCustomerEncryption
//

@implementation GTLRStorage_ObjectCustomerEncryption
@dynamic encryptionAlgorithm, keySha256;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ObjectMetadata
//

@implementation GTLRStorage_ObjectMetadata

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ObjectOwner
//

@implementation GTLRStorage_ObjectOwner
@dynamic entity, entityId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ObjectAccessControl
//

@implementation GTLRStorage_ObjectAccessControl
@dynamic bucket, domain, email, entity, entityId, ETag, generation, identifier,
         kind, object, projectTeam, role, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ObjectAccessControlProjectTeam
//

@implementation GTLRStorage_ObjectAccessControlProjectTeam
@dynamic projectNumber, team;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_ObjectAccessControls
//

@implementation GTLRStorage_ObjectAccessControls
@dynamic items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRStorage_ObjectAccessControl class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_Objects
//

@implementation GTLRStorage_Objects
@dynamic items, kind, nextPageToken, prefixes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRStorage_Object class],
    @"prefixes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStorage_RewriteResponse
//

@implementation GTLRStorage_RewriteResponse
@dynamic done, kind, objectSize, resource, rewriteToken, totalBytesRewritten;
@end
