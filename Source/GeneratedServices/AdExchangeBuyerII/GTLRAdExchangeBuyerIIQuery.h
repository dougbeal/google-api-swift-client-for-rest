// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Ad Exchange Buyer API II (adexchangebuyer2/v2beta1)
// Description:
//   Accesses the latest features for managing Ad Exchange accounts, Real-Time
//   Bidding configurations and auction metrics, and Marketplace programmatic
//   deals.
// Documentation:
//   https://developers.google.com/ad-exchange/buyer-rest/guides/client-access/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRQuery.h"
#else
  #import "GTLRQuery.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAdExchangeBuyerII_Client;
@class GTLRAdExchangeBuyerII_ClientUser;
@class GTLRAdExchangeBuyerII_ClientUserInvitation;

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other AdExchangeBuyerII query classes.
 */
@interface GTLRAdExchangeBuyerIIQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new client buyer.
 *
 *  Method: adexchangebuyer2.accounts.clients.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsCreate : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsCreateWithObject:accountId:]

/**
 *  Unique numerical account ID for the buyer of which the client buyer
 *  is a customer; the sponsor buyer to create a client for. (required)
 */
@property(nonatomic, assign) long long accountId;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_Client.
 *
 *  Creates a new client buyer.
 *
 *  @param object The @c GTLRAdExchangeBuyerII_Client to include in the query.
 *  @param accountId Unique numerical account ID for the buyer of which the
 *    client buyer
 *    is a customer; the sponsor buyer to create a client for. (required)
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsCreate
 */
+ (instancetype)queryWithObject:(GTLRAdExchangeBuyerII_Client *)object
                      accountId:(long long)accountId;

@end

/**
 *  Gets a client buyer with a given client account ID.
 *
 *  Method: adexchangebuyer2.accounts.clients.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsGet : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsGetWithaccountId:clientAccountId:]

/** Numerical account ID of the client's sponsor buyer. (required) */
@property(nonatomic, assign) long long accountId;

/** Numerical account ID of the client buyer to retrieve. (required) */
@property(nonatomic, assign) long long clientAccountId;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_Client.
 *
 *  Gets a client buyer with a given client account ID.
 *
 *  @param accountId Numerical account ID of the client's sponsor buyer.
 *    (required)
 *  @param clientAccountId Numerical account ID of the client buyer to retrieve.
 *    (required)
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsGet
 */
+ (instancetype)queryWithAccountId:(long long)accountId
                   clientAccountId:(long long)clientAccountId;

@end

/**
 *  Creates and sends out an email invitation to access
 *  an Ad Exchange client buyer account.
 *
 *  Method: adexchangebuyer2.accounts.clients.invitations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsInvitationsCreate : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsInvitationsCreateWithObject:accountId:clientAccountId:]

/** Numerical account ID of the client's sponsor buyer. (required) */
@property(nonatomic, assign) long long accountId;

/**
 *  Numerical account ID of the client buyer that the user
 *  should be associated with. (required)
 */
@property(nonatomic, assign) long long clientAccountId;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_ClientUserInvitation.
 *
 *  Creates and sends out an email invitation to access
 *  an Ad Exchange client buyer account.
 *
 *  @param object The @c GTLRAdExchangeBuyerII_ClientUserInvitation to include
 *    in the query.
 *  @param accountId Numerical account ID of the client's sponsor buyer.
 *    (required)
 *  @param clientAccountId Numerical account ID of the client buyer that the
 *    user
 *    should be associated with. (required)
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsInvitationsCreate
 */
+ (instancetype)queryWithObject:(GTLRAdExchangeBuyerII_ClientUserInvitation *)object
                      accountId:(long long)accountId
                clientAccountId:(long long)clientAccountId;

@end

/**
 *  Retrieves an existing client user invitation.
 *
 *  Method: adexchangebuyer2.accounts.clients.invitations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsInvitationsGet : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsInvitationsGetWithaccountId:clientAccountId:invitationId:]

/** Numerical account ID of the client's sponsor buyer. (required) */
@property(nonatomic, assign) long long accountId;

/**
 *  Numerical account ID of the client buyer that the user invitation
 *  to be retrieved is associated with. (required)
 */
@property(nonatomic, assign) long long clientAccountId;

/** Numerical identifier of the user invitation to retrieve. (required) */
@property(nonatomic, assign) long long invitationId;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_ClientUserInvitation.
 *
 *  Retrieves an existing client user invitation.
 *
 *  @param accountId Numerical account ID of the client's sponsor buyer.
 *    (required)
 *  @param clientAccountId Numerical account ID of the client buyer that the
 *    user invitation
 *    to be retrieved is associated with. (required)
 *  @param invitationId Numerical identifier of the user invitation to retrieve.
 *    (required)
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsInvitationsGet
 */
+ (instancetype)queryWithAccountId:(long long)accountId
                   clientAccountId:(long long)clientAccountId
                      invitationId:(long long)invitationId;

@end

/**
 *  Lists all the client users invitations for a client
 *  with a given account ID.
 *
 *  Method: adexchangebuyer2.accounts.clients.invitations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsInvitationsList : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsInvitationsListWithaccountId:clientAccountId:]

/** Numerical account ID of the client's sponsor buyer. (required) */
@property(nonatomic, assign) long long accountId;

/**
 *  Numerical account ID of the client buyer to list invitations for.
 *  (required)
 *  You must either specify a string representation of a
 *  numerical account identifier or the `-` character
 *  to list all the invitations for all the clients
 *  of a given sponsor buyer.
 */
@property(nonatomic, copy, nullable) NSString *clientAccountId;

/**
 *  Requested page size. Server may return fewer clients than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  ListClientUserInvitationsResponse.nextPageToken
 *  returned from the previous call to the
 *  clients.invitations.list
 *  method.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_ListClientUserInvitationsResponse.
 *
 *  Lists all the client users invitations for a client
 *  with a given account ID.
 *
 *  @param accountId Numerical account ID of the client's sponsor buyer.
 *    (required)
 *  @param clientAccountId Numerical account ID of the client buyer to list
 *    invitations for.
 *    (required)
 *    You must either specify a string representation of a
 *    numerical account identifier or the `-` character
 *    to list all the invitations for all the clients
 *    of a given sponsor buyer.
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsInvitationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAccountId:(long long)accountId
                   clientAccountId:(NSString *)clientAccountId;

@end

/**
 *  Lists all the clients for the current sponsor buyer.
 *
 *  Method: adexchangebuyer2.accounts.clients.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsList : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsListWithaccountId:]

/**
 *  Unique numerical account ID of the sponsor buyer to list the clients for.
 */
@property(nonatomic, assign) long long accountId;

/**
 *  Requested page size. The server may return fewer clients than requested.
 *  If unspecified, the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  ListClientsResponse.nextPageToken
 *  returned from the previous call to the
 *  accounts.clients.list method.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_ListClientsResponse.
 *
 *  Lists all the clients for the current sponsor buyer.
 *
 *  @param accountId Unique numerical account ID of the sponsor buyer to list
 *    the clients for.
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAccountId:(long long)accountId;

@end

/**
 *  Updates an existing client buyer.
 *
 *  Method: adexchangebuyer2.accounts.clients.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsUpdate : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsUpdateWithObject:accountId:clientAccountId:]

/**
 *  Unique numerical account ID for the buyer of which the client buyer
 *  is a customer; the sponsor buyer to update a client for. (required)
 */
@property(nonatomic, assign) long long accountId;

/** Unique numerical account ID of the client to update. (required) */
@property(nonatomic, assign) long long clientAccountId;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_Client.
 *
 *  Updates an existing client buyer.
 *
 *  @param object The @c GTLRAdExchangeBuyerII_Client to include in the query.
 *  @param accountId Unique numerical account ID for the buyer of which the
 *    client buyer
 *    is a customer; the sponsor buyer to update a client for. (required)
 *  @param clientAccountId Unique numerical account ID of the client to update.
 *    (required)
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsUpdate
 */
+ (instancetype)queryWithObject:(GTLRAdExchangeBuyerII_Client *)object
                      accountId:(long long)accountId
                clientAccountId:(long long)clientAccountId;

@end

/**
 *  Retrieves an existing client user.
 *
 *  Method: adexchangebuyer2.accounts.clients.users.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsUsersGet : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsUsersGetWithaccountId:clientAccountId:userId:]

/** Numerical account ID of the client's sponsor buyer. (required) */
@property(nonatomic, assign) long long accountId;

/**
 *  Numerical account ID of the client buyer
 *  that the user to be retrieved is associated with. (required)
 */
@property(nonatomic, assign) long long clientAccountId;

/** Numerical identifier of the user to retrieve. (required) */
@property(nonatomic, assign) long long userId;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_ClientUser.
 *
 *  Retrieves an existing client user.
 *
 *  @param accountId Numerical account ID of the client's sponsor buyer.
 *    (required)
 *  @param clientAccountId Numerical account ID of the client buyer
 *    that the user to be retrieved is associated with. (required)
 *  @param userId Numerical identifier of the user to retrieve. (required)
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsUsersGet
 */
+ (instancetype)queryWithAccountId:(long long)accountId
                   clientAccountId:(long long)clientAccountId
                            userId:(long long)userId;

@end

/**
 *  Lists all the known client users for a specified
 *  sponsor buyer account ID.
 *
 *  Method: adexchangebuyer2.accounts.clients.users.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsUsersList : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsUsersListWithaccountId:clientAccountId:]

/**
 *  Numerical account ID of the sponsor buyer of the client to list users for.
 *  (required)
 */
@property(nonatomic, assign) long long accountId;

/**
 *  The account ID of the client buyer to list users for. (required)
 *  You must specify either a string representation of a
 *  numerical account identifier or the `-` character
 *  to list all the client users for all the clients
 *  of a given sponsor buyer.
 */
@property(nonatomic, copy, nullable) NSString *clientAccountId;

/**
 *  Requested page size. The server may return fewer clients than requested.
 *  If unspecified, the server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying a page of results the server should return.
 *  Typically, this is the value of
 *  ListClientUsersResponse.nextPageToken
 *  returned from the previous call to the
 *  accounts.clients.users.list method.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_ListClientUsersResponse.
 *
 *  Lists all the known client users for a specified
 *  sponsor buyer account ID.
 *
 *  @param accountId Numerical account ID of the sponsor buyer of the client to
 *    list users for.
 *    (required)
 *  @param clientAccountId The account ID of the client buyer to list users for.
 *    (required)
 *    You must specify either a string representation of a
 *    numerical account identifier or the `-` character
 *    to list all the client users for all the clients
 *    of a given sponsor buyer.
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsUsersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithAccountId:(long long)accountId
                   clientAccountId:(NSString *)clientAccountId;

@end

/**
 *  Updates an existing client user.
 *  Only the user status can be changed on update.
 *
 *  Method: adexchangebuyer2.accounts.clients.users.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdExchangeBuyerIIAdexchangeBuyer
 */
@interface GTLRAdExchangeBuyerIIQuery_AccountsClientsUsersUpdate : GTLRAdExchangeBuyerIIQuery
// Previous library name was
//   +[GTLQueryAdExchangeBuyerII queryForAccountsClientsUsersUpdateWithObject:accountId:clientAccountId:userId:]

/** Numerical account ID of the client's sponsor buyer. (required) */
@property(nonatomic, assign) long long accountId;

/**
 *  Numerical account ID of the client buyer that the user to be retrieved
 *  is associated with. (required)
 */
@property(nonatomic, assign) long long clientAccountId;

/** Numerical identifier of the user to retrieve. (required) */
@property(nonatomic, assign) long long userId;

/**
 *  Fetches a @c GTLRAdExchangeBuyerII_ClientUser.
 *
 *  Updates an existing client user.
 *  Only the user status can be changed on update.
 *
 *  @param object The @c GTLRAdExchangeBuyerII_ClientUser to include in the
 *    query.
 *  @param accountId Numerical account ID of the client's sponsor buyer.
 *    (required)
 *  @param clientAccountId Numerical account ID of the client buyer that the
 *    user to be retrieved
 *    is associated with. (required)
 *  @param userId Numerical identifier of the user to retrieve. (required)
 *
 *  @returns GTLRAdExchangeBuyerIIQuery_AccountsClientsUsersUpdate
 */
+ (instancetype)queryWithObject:(GTLRAdExchangeBuyerII_ClientUser *)object
                      accountId:(long long)accountId
                clientAccountId:(long long)clientAccountId
                         userId:(long long)userId;

@end

NS_ASSUME_NONNULL_END
