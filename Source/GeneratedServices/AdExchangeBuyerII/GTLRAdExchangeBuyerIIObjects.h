// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Ad Exchange Buyer API II (adexchangebuyer2/v2beta1)
// Description:
//   Accesses the latest features for managing Ad Exchange accounts, Real-Time
//   Bidding configurations and auction metrics, and Marketplace programmatic
//   deals.
// Documentation:
//   https://developers.google.com/ad-exchange/buyer-rest/guides/client-access/

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAdExchangeBuyerII_Client;
@class GTLRAdExchangeBuyerII_ClientUser;
@class GTLRAdExchangeBuyerII_ClientUserInvitation;

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Client.entityType

/**
 *  An advertiser.
 *
 *  Value: "ADVERTISER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_EntityType_Advertiser;
/**
 *  An advertising agency.
 *
 *  Value: "AGENCY"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_EntityType_Agency;
/**
 *  A brand.
 *
 *  Value: "BRAND"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_EntityType_Brand;
/**
 *  A placeholder for an undefined client entity type. Should not be used.
 *
 *  Value: "ENTITY_TYPE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_EntityType_EntityTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Client.role

/**
 *  Users associated with this client can approve eligible deals
 *  on your behalf. Some deals may still explicitly require publisher
 *  finalization. If this role is not selected, the sponsor buyer
 *  will need to manually approve each of their deals.
 *
 *  Value: "CLIENT_DEAL_APPROVER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Role_ClientDealApprover;
/**
 *  Users associated with this client can respond to deal proposals
 *  sent to them by publishers. They can also initiate deal proposals
 *  of their own.
 *
 *  Value: "CLIENT_DEAL_NEGOTIATOR"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Role_ClientDealNegotiator;
/**
 *  Users associated with this client can see publisher deal offers
 *  in the Marketplace.
 *  They can neither negotiate proposals nor approve deals.
 *  If this client is visible to publishers, they can send deal proposals
 *  to this client.
 *
 *  Value: "CLIENT_DEAL_VIEWER"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Role_ClientDealViewer;
/**
 *  A placeholder for an undefined client role.
 *
 *  Value: "CLIENT_ROLE_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Role_ClientRoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_Client.status

/**
 *  A client that is currently active.
 *
 *  Value: "ACTIVE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Status_Active;
/**
 *  A placeholder for an undefined client status.
 *
 *  Value: "CLIENT_STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Status_ClientStatusUnspecified;
/**
 *  A client that is currently disabled.
 *
 *  Value: "DISABLED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_Client_Status_Disabled;

// ----------------------------------------------------------------------------
// GTLRAdExchangeBuyerII_ClientUser.status

/**
 *  A user that is currently active.
 *
 *  Value: "ACTIVE"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ClientUser_Status_Active;
/**
 *  A user that is currently disabled.
 *
 *  Value: "DISABLED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ClientUser_Status_Disabled;
/**
 *  A user who was already created but hasn't accepted the invitation yet.
 *
 *  Value: "PENDING"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ClientUser_Status_Pending;
/**
 *  A placeholder for an undefined user status.
 *
 *  Value: "USER_STATUS_UNSPECIFIED"
 */
GTLR_EXTERN NSString * const kGTLRAdExchangeBuyerII_ClientUser_Status_UserStatusUnspecified;

/**
 *  A client resource represents a client buyer&mdash;an agency,
 *  a brand, or an advertiser customer of the sponsor buyer.
 *  Users associated with the client buyer have restricted access to
 *  the Ad Exchange Marketplace and certain other sections
 *  of the Ad Exchange Buyer UI based on the role
 *  granted to the client buyer.
 *  All fields are required unless otherwise specified.
 */
@interface GTLRAdExchangeBuyerII_Client : GTLRObject

/**
 *  The globally-unique numerical ID of the client.
 *  The value of this field is ignored in create and update operations.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clientAccountId;

/**
 *  Name used to represent this client to publishers.
 *  You may have multiple clients that map to the same entity,
 *  but for each client the combination of `clientName` and entity
 *  must be unique.
 *  You can specify this field as empty.
 */
@property(nonatomic, copy, nullable) NSString *clientName;

/**
 *  Numerical identifier of the client entity.
 *  The entity can be an advertiser, a brand, or an agency.
 *  This identifier is unique among all the entities with the same type.
 *  A list of all known advertisers with their identifiers is available in the
 *  [advertisers.txt](https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt)
 *  file.
 *  A list of all known brands with their identifiers is available in the
 *  [brands.txt](https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt)
 *  file.
 *  A list of all known agencies with their identifiers is available in the
 *  [agencies.txt](https://storage.googleapis.com/adx-rtb-dictionaries/agencies.txt)
 *  file.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *entityId;

/**
 *  The name of the entity. This field is automatically fetched based on
 *  the type and ID.
 *  The value of this field is ignored in create and update operations.
 *
 *  Remapped to 'entityNameProperty' to avoid NSObject's 'entityName'.
 */
@property(nonatomic, copy, nullable) NSString *entityNameProperty;

/**
 *  The type of the client entity: `ADVERTISER`, `BRAND`, or `AGENCY`.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Client_EntityType_Advertiser An advertiser.
 *        (Value: "ADVERTISER")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_EntityType_Agency An advertising
 *        agency. (Value: "AGENCY")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_EntityType_Brand A brand. (Value:
 *        "BRAND")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_EntityType_EntityTypeUnspecified A
 *        placeholder for an undefined client entity type. Should not be used.
 *        (Value: "ENTITY_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  The role which is assigned to the client buyer. Each role implies a set of
 *  permissions granted to the client. Must be one of `CLIENT_DEAL_VIEWER`,
 *  `CLIENT_DEAL_NEGOTIATOR` or `CLIENT_DEAL_APPROVER`.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Role_ClientDealApprover Users
 *        associated with this client can approve eligible deals
 *        on your behalf. Some deals may still explicitly require publisher
 *        finalization. If this role is not selected, the sponsor buyer
 *        will need to manually approve each of their deals. (Value:
 *        "CLIENT_DEAL_APPROVER")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Role_ClientDealNegotiator Users
 *        associated with this client can respond to deal proposals
 *        sent to them by publishers. They can also initiate deal proposals
 *        of their own. (Value: "CLIENT_DEAL_NEGOTIATOR")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Role_ClientDealViewer Users
 *        associated with this client can see publisher deal offers
 *        in the Marketplace.
 *        They can neither negotiate proposals nor approve deals.
 *        If this client is visible to publishers, they can send deal proposals
 *        to this client. (Value: "CLIENT_DEAL_VIEWER")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Role_ClientRoleUnspecified A
 *        placeholder for an undefined client role. (Value:
 *        "CLIENT_ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *role;

/**
 *  The status of the client buyer.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Status_Active A client that is
 *        currently active. (Value: "ACTIVE")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Status_ClientStatusUnspecified A
 *        placeholder for an undefined client status. (Value:
 *        "CLIENT_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRAdExchangeBuyerII_Client_Status_Disabled A client that is
 *        currently disabled. (Value: "DISABLED")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  Whether the client buyer will be visible to sellers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *visibleToSeller;

@end


/**
 *  A client user is created under a client buyer and has restricted access to
 *  the Ad Exchange Marketplace and certain other sections
 *  of the Ad Exchange Buyer UI based on the role
 *  granted to the associated client buyer.
 *  The only way a new client user can be created is via accepting an
 *  email invitation
 *  (see the
 *  accounts.clients.invitations.create
 *  method).
 *  All fields are required unless otherwise specified.
 */
@interface GTLRAdExchangeBuyerII_ClientUser : GTLRObject

/**
 *  Numerical account ID of the client buyer
 *  with which the user is associated; the
 *  buyer must be a client of the current sponsor buyer.
 *  The value of this field is ignored in an update operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clientAccountId;

/**
 *  User's email address. The value of this field
 *  is ignored in an update operation.
 */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  The status of the client user.
 *
 *  Likely values:
 *    @arg @c kGTLRAdExchangeBuyerII_ClientUser_Status_Active A user that is
 *        currently active. (Value: "ACTIVE")
 *    @arg @c kGTLRAdExchangeBuyerII_ClientUser_Status_Disabled A user that is
 *        currently disabled. (Value: "DISABLED")
 *    @arg @c kGTLRAdExchangeBuyerII_ClientUser_Status_Pending A user who was
 *        already created but hasn't accepted the invitation yet. (Value:
 *        "PENDING")
 *    @arg @c kGTLRAdExchangeBuyerII_ClientUser_Status_UserStatusUnspecified A
 *        placeholder for an undefined user status. (Value:
 *        "USER_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  The unique numerical ID of the client user
 *  that has accepted an invitation.
 *  The value of this field is ignored in an update operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *userId;

@end


/**
 *  An invitation for a new client user to get access to the Ad Exchange
 *  Buyer UI.
 *  All fields are required unless otherwise specified.
 */
@interface GTLRAdExchangeBuyerII_ClientUserInvitation : GTLRObject

/**
 *  Numerical account ID of the client buyer
 *  that the invited user is associated with.
 *  The value of this field is ignored in create operations.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clientAccountId;

/**
 *  The email address to which the invitation is sent. Email
 *  addresses should be unique among all client users under each sponsor
 *  buyer.
 */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  The unique numerical ID of the invitation that is sent to the user.
 *  The value of this field is ignored in create operations.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invitationId;

@end


/**
 *  GTLRAdExchangeBuyerII_ListClientsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "clients" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListClientsResponse : GTLRCollectionObject

/**
 *  The returned list of clients.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_Client *> *clients;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListClientsRequest.pageToken
 *  field in the subsequent call to the
 *  accounts.clients.list method
 *  to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRAdExchangeBuyerII_ListClientUserInvitationsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "invitations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListClientUserInvitationsResponse : GTLRCollectionObject

/**
 *  The returned list of client users.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ClientUserInvitation *> *invitations;

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListClientUserInvitationsRequest.pageToken
 *  field in the subsequent call to the
 *  clients.invitations.list
 *  method to retrieve the next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRAdExchangeBuyerII_ListClientUsersResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "users" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAdExchangeBuyerII_ListClientUsersResponse : GTLRCollectionObject

/**
 *  A token to retrieve the next page of results.
 *  Pass this value in the
 *  ListClientUsersRequest.pageToken
 *  field in the subsequent call to the
 *  clients.invitations.list
 *  method to retrieve the next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The returned list of client users.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAdExchangeBuyerII_ClientUser *> *users;

@end

NS_ASSUME_NONNULL_END
