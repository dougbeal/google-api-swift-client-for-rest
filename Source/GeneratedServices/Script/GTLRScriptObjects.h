// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Apps Script Execution API (script/v1)
// Description:
//   Executes Google Apps Script projects.
// Documentation:
//   https://developers.google.com/apps-script/execution/rest/v1/scripts/run

#if GTLR_BUILT_AS_FRAMEWORK
  #import "GTLR/GTLRObject.h"
#else
  #import "GTLRObject.h"
#endif

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRScript_OperationMetadata;
@class GTLRScript_OperationResponse;
@class GTLRScript_StackTraceElement;
@class GTLRScript_Status;
@class GTLRScript_StatusDetailsItem;

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRScript_ExecutionResponse.status

/** Value: "CANCELED" */
GTLR_EXTERN NSString * const kGTLRScript_ExecutionResponse_Status_Canceled;
/** Value: "SUCCESS" */
GTLR_EXTERN NSString * const kGTLRScript_ExecutionResponse_Status_Success;

/**
 *  An object that provides information about the nature of an error in the Apps
 *  Script Execution API. If an `run` call succeeds but the script function (or
 *  Apps Script itself) throws an exception, the response body's `error` field
 *  will contain a `Status` object. The `Status` object's `details` field will
 *  contain an array with a single one of these `ExecutionError` objects.
 */
@interface GTLRScript_ExecutionError : GTLRObject

/**
 *  The error message thrown by Apps Script, usually localized into the user's
 *  language.
 */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/**
 *  The error type, for example `TypeError` or `ReferenceError`. If the error
 *  type is unavailable, this field is not included.
 */
@property(nonatomic, copy, nullable) NSString *errorType;

/**
 *  An array of objects that provide a stack trace through the script to show
 *  where the execution failed, with the deepest call first.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRScript_StackTraceElement *> *scriptStackTraceElements;

@end


/**
 *  A request to run the function in a script. The script is identified by the
 *  specified `script_id`. Executing a function on a script will return results
 *  based on the implementation of the script.
 */
@interface GTLRScript_ExecutionRequest : GTLRObject

/**
 *  If `true` and the user is an owner of the script, the script runs at the
 *  most recently saved version rather than the version deployed for use with
 *  the Execution API. Optional; default is `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *devMode;

/**
 *  The name of the function to execute in the given script. The name does not
 *  include parentheses or parameters.
 */
@property(nonatomic, copy, nullable) NSString *function;

/**
 *  The parameters to be passed to the function being executed. The type for
 *  each parameter should match the expected type in Apps Script. Parameters
 *  cannot be Apps Script-specific objects (such as a `Document` or `Calendar`);
 *  they can only be primitive types such as a `string`, `number`, `array`,
 *  `object`, or `boolean`. Optional.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *parameters;

/** This field is not used. */
@property(nonatomic, copy, nullable) NSString *sessionState;

@end


/**
 *  An object that provides the return value of a function executed through the
 *  Apps Script Execution API. If an `run` call succeeds and the script function
 *  returns successfully, the response body's `response` field will contain this
 *  `ExecutionResponse` object.
 */
@interface GTLRScript_ExecutionResponse : GTLRObject

/**
 *  The return value of the script function. The type will match the type
 *  returned in Apps Script. Functions called through the Execution API cannot
 *  return Apps Script-specific objects (such as a `Document` or `Calendar`);
 *  they can only return primitive types such as a `string`, `number`, `array`,
 *  `object`, or `boolean`.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id result;

/**
 *  status
 *
 *  Likely values:
 *    @arg @c kGTLRScript_ExecutionResponse_Status_Canceled Value "CANCELED"
 *    @arg @c kGTLRScript_ExecutionResponse_Status_Success Value "SUCCESS"
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  The response will not arrive until the function finishes executing. The
 *  maximum runtime is listed in the guide to [limitations in Apps
 *  Script](https://developers.google.com/apps-script/guides/services/quotas#current_limitations).
 *  If the script function returns successfully, the `response` field will
 *  contain an `ExecutionResponse` object with the function's return value in
 *  the object's `result` field.
 *  If the script function (or Apps Script itself) throws an exception, the
 *  `error` field will contain a `Status` object. The `Status` object's
 *  `details` field will contain an array with a single `ExecutionError` object
 *  that provides information about the nature of the error.
 *  If the `run` call itself fails (for example, because of a malformed request
 *  or an authorization error), the method will return an HTTP response code in
 *  the 4XX range with a different format for the response body. Client
 *  libraries will automatically convert a 4XX response into an exception class.
 */
@interface GTLRScript_Operation : GTLRObject

/**
 *  This field is not used.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/**
 *  If a `run` call succeeds but the script function (or Apps Script itself)
 *  throws an exception, this field will contain a `Status` object. The `Status`
 *  object's `details` field will contain an array with a single
 *  `ExecutionError` object that provides information about the nature of the
 *  error.
 */
@property(nonatomic, strong, nullable) GTLRScript_Status *error;

/** This field is not used. */
@property(nonatomic, strong, nullable) GTLRScript_OperationMetadata *metadata;

/** This field is not used. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  If the script function returns successfully, this field will contain an
 *  `ExecutionResponse` object with the function's return value as the object's
 *  `result` field.
 */
@property(nonatomic, strong, nullable) GTLRScript_OperationResponse *response;

@end


/**
 *  This field is not used.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRScript_OperationMetadata : GTLRObject
@end


/**
 *  If the script function returns successfully, this field will contain an
 *  `ExecutionResponse` object with the function's return value as the object's
 *  `result` field.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRScript_OperationResponse : GTLRObject
@end


/**
 *  A stack trace through the script that shows where the execution failed.
 */
@interface GTLRScript_StackTraceElement : GTLRObject

/** The name of the function that failed. */
@property(nonatomic, copy, nullable) NSString *function;

/**
 *  The line number where the script failed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lineNumber;

@end


/**
 *  If a `run` call succeeds but the script function (or Apps Script itself)
 *  throws an exception, the response body's `error` field will contain this
 *  `Status` object.
 */
@interface GTLRScript_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  An array that contains a single `ExecutionError` object that provides
 *  information about the nature of the error.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRScript_StatusDetailsItem *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRScript_StatusDetailsItem
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRScript_StatusDetailsItem : GTLRObject
@end

NS_ASSUME_NONNULL_END
